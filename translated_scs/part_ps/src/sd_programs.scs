.system_element_5538
=> nrel_inclusion: [*

	.system_element_6234
	<- subject_domain;
	=> nrel_authors: {
		.system_element_300;
		.system_element_301
	};
	=> nrel_summary: [<p>Несмотря на активное развитие и использование современных технологий и языков программирования, общей семантической теории программ, на основе которой можно было бы проектировать и разрабатывать прикладные системы, на данный момент не существует. В данной предметной области предлагается семантическая теория программ для ostis-систем. Рассматриваются особенности представления и ключевые моменты процесса интерпретации программ в ostis-системах.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	<= .system_element_116: <
		.system_element_6235;
		.system_element_6236;
		.system_element_6237;
		.system_element_6238;
		.system_element_6239;
		.system_element_6240
	>;
	-> .system_element_756: 
		.system_element_6241;
		.system_element_6242
		(*
			=> nrel_idtf: [<p>Предлагаемый вариант теории для проектирования языков программирования и программ для интеллектуальных компьютерных систем нового поколения</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*)
	;
	-> .system_element_112: 
		.system_element_465;
		.system_element_5250;
		.system_element_6243
	;
	-> .system_element_748: 
		.system_element_5204;
		.system_element_6244;
		.system_element_4995;
		.system_element_4997;
		.system_element_6245;
		.system_element_6246;
		.system_element_6247;
		.system_element_6248
	;
	=> .system_element_14: 
		.system_element_6249;
		.system_element_6250;
		.system_element_6251;
		.system_element_6252;
		.system_element_6253;
		.system_element_6254;
		.system_element_6255;
		.system_element_6256;
		.system_element_6257;
		.system_element_6258;
		.system_element_6259;
		.system_element_2457;
		.system_element_6260;
		.system_element_5369;
		.system_element_6261;
		.system_element_6262;
		.system_element_6263;
		.system_element_3396;
		.system_element_6264;
		.system_element_6265;
		.system_element_6266;
		.system_element_6267;
		.system_element_6268;
		.system_element_6269;
		.system_element_6270;
		.system_element_6271;
		.system_element_2809;
		IMS;
		.system_element_6272;
		.system_element_6273;
		.system_element_6274;
		.system_element_6275;
		.system_element_6276
	;
	=> nrel_introduction: <
		[<p>За долгий период развития компьютерных систем практически сняты аппаратные ограничения на решение различных задач. Оставшиеся ограничения отводятся на долю программного обеспечения. Прежде всего эти ограничения связаны с текущими проблемами развития программного обеспечения</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
			=> .system_element_1814: {
				[<p><u>Аппаратная сложность опережает</u> умение человечества строить <u>программные компьютерные системы</u>, использующее потенциальные возможности аппаратуры.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>Навыки и <u>технологии</u> разработки программ <u>отстают от требований</u>, предъявляемых к разработке программ нового поколения.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>Возможностям эксплуатировать существующие программы угрожает <u>низкое качество их разработки</u>.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*)
			};;
			=> .system_element_909: [<p>Ключом к решению этих проблем является глубокое понимание и грамотное использование существующих <i>языков программирования</i> как основного инструмента для массового создания <i>программных компьютерных систем нового поколения</i>.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);
		[<p>В данной предметной области акцент делается на достижение следующих результатов (1) изложение классических основ, отражающих накопленный мировой опыт в области разработки и применения современных <i>языков программирования</i>;
		<li> и (2) систематизация основных результатов в этой области в виде единой унифицированной <i>Семантической теории программ для интеллектуальных компьютерных систем нового поколения</i>, построенных по принципам <i>Технологии OSTIS</i>.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>В данной предметной области подробно описываются проблемы текущего состояния в области <i>технологий</i> и <i>языков программирования</i>. Она посвящена базовым понятиям <i>теории языков программирования</i>, дается обзорная характеристика областей применения <i>языков программирования</i>, достаточно востребованных современным человеческим обществом, рассматриваются способы представления и интерпретации <i>программ</i> различных <i>языков программирования</i>, подробно описываются формы и содержание критериев для оценки <i>эффективности языков</i>.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*)
	>;
	=> nrel_note: [<p>Проектирование и реализация <i>программы</i> на каком-либо <i>языке программирования</i> должна сводиться к описанию ее <i>синтаксиса</i> и <i>денотационной семантики</i> в базе знаний ostis-системы с помощью некоторой библиотеки предметных областей и онтологий программ, описываемой в рамках этой базы знаний. Для этого нужна онтология программ, которые позволили бы в достаточном объеме описывать программы на любых языках программирования в ostis-системах. Такой подход позволяет не только описывать сложноструктурированные объекты простым и понятным языком, но и позволяет унифицировать представление различных видов знаний. Тем самым, информация о программах и сами программы представляются на одном и том же языке (имеют один синтаксис), но содержательно описываются при помощи разных онтологий. Таким образом, <u>решением всех проблем будет являться общая теория программ</u>, однозначно соответствующей некоторой онтологии программ, c помощью которых можно было бы описывать синтаксис и денотационную семантику любых программ в ostis-системах.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_note: [<p>Таким образом, результатом данной предметной области является <i>Предметная область и онтология программ</i> (далее --- Предметная область и онтология методов), с помощью которой можно описывать синтаксис, денотационную и операционную семантику различных методов в ostis-системах. <i>Предметная область и онтология методов</i> является дочерней предметной областью по отношению к <i>Предметной области и онтологии информационных конструкций и языков</i>. Это означает, что она наследует все свойства исследуемых в ней понятий и отношений.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;

	.system_element_6235
	=> nrel_inclusion: [*
		-> {
			[<p>Поскольку количество <i>языков программирования</i> растет с увеличением потребности в них, то растут и потребности в описании этих <i>языков программирования</i> для дальнейшего использования и проектирования прикладных систем. Это в свою очередь требует высокого уровня качества спецификации конкретного языка: и описания <i>синтаксиса</i> и семантики конструкций этого языка, и описания средств и методов реновации инструментальных средств, обеспечивающих интерпретацию или трансляцию этого языка. То есть, с увеличением количества <i>языков программирования</i> растет не только многообразие форм представления знаний (<i>языков программирования</i>), но и количество <i>программных компьютерных систем</i> на различных формах представления знаний.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Большое многообразие форм представления знаний, как говорилось выше, предоставляет большой спектр возможностей проектирования <i>программных компьютерных систем</i> на каждой из них. Получается, чтобы произвести интеграцию нескольких <i>программных компьютерных систем</i>, реализованных на разных <i>языках программирования</i>, необходимо сделать так, чтобы системы могли коммуницировать между собой на каждом из тех языков, на котором они реализованы. Так, стремление к использованию существующих программных компонентов затрудняется реализацией самих компонентов, поскольку чтобы объединить эти компоненты необходимо изменить их программный код. Наличие многообразия форм затрудняет реализацию <i>совместимых интероперабельных программных компьютерных систем</i>.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>С ростом сложности программного кода, уменьшается количество способных понять его смысл. Современные разработчики создают <i>программные компьютерные системы</i>, не учитывая полный ее жизненный цикл. Системы должны постоянно обновляться и совершенствоваться с развитием технологий, на которых она основана. Это должно обеспечиваться хорошей документацией реализации компонентов этих систем --- это снижает не только потребности в привлечении новых ресурсов и кадров, но и способствует снижению реинжиниринга <i>программных компьютерных систем</i>.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Полная автоматизация проектирования <i>программных компьютерных систем</i> невозможна, поскольку современные языки, на которых они проектируются не имеют свойства рефлексивности --- системы не могут познавать и понимать себя и развиваться в полной мере самостоятельно. Таким образом, существующие <i>программные компьютерные системы</i> не являются как таковыми интеллектуальными, потому что не имеют необходимых им свойств.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Ключом к легкому и глубокому освоению конкретного языка как основного профессионального инструмента программиста является понимание общих принципов построения и применения языков программирования, описываемых их общей теорией. До сегодняшнего дня, общей <i>Семантической теории языков программирования</i> до сих пор не существует, что затрудняет разработку, верификацию и использование новых и существующих <i>языков программирования</i>. Без общей теории каждый может разрабатывать принципиально общие методы и средства так, как хочется, а не так, как требуется.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Достижение максимума услуг и средств при минимуме затрат возможно только путем глубокого понимания принципов построения <i>языков программирования</i> за счет простоты средств и методов представления знаний. Сложное нужно сводить к простому и изъяснять простыми понятиями, не создавая дополнительной иллюзии важности.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*)
		};
		=> .system_element_180: {
			.system_element_6250;
			.system_element_6251;
			.system_element_6252;
			.system_element_6253;
			.system_element_6254;
			.system_element_6255;
			.system_element_6256;
			.system_element_6252;
			.system_element_6253;
			.system_element_6257;
			.system_element_6254;
			.system_element_6256;
			.system_element_6258;
			.system_element_1150
		};
		=> nrel_introduction: <
			[<p>В современную эру развития информационных технологий существует огромное количество <i>языков программирования</i>, каждый из которых имеет свое важное назначение в области проектирования <i>программных компьютерных систем</i>. Многообразие <i>языков программирования</i> и решений, созданных на них, настолько велико, что очень легко потеряться в море информации о всех аспектах применения и проектирования <i>языков программирования</i>. Кроме этого, основная проблема заключается не в количестве существующих решений в области разработки и применения современных <i>языков программирования</i>, а количестве форм (!), на которых представляются конкретные <i>языки программирования</i>. Так, <i>декларативные знания</i>, то есть знания, являющиеся, например, спецификацией какой-то программы, и <i>процедурные знания</i>, то есть знания, которые являются программами, принадлежащими какому-то <i>языку программирования</i>, представляются совершенно различными способами, методами и средствами.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				=> .system_element_180: {
					.system_element_6249
				};;
			*);
			[<p>Все рассматриваемые проблемы связаны и являются проблемами текущего состояния направлений развития в области <i>Искусственного интеллекта</i>.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				=> .system_element_180: {
					.system_element_6259
				};;
			*);
			[<p>Итак, для решения перечисленных проблем необходимо создавать комфортные условия для реализации <i>программных компьютерных систем</i>, семантически совместимых и интероперабельных между собой. В контексте <i>языков программирования</i> необходима общая <i>Семантическая теория программ для интеллектуальных компьютерных систем нового поколения</i>, которая: <u>позволит</u> без больших усилий и затрат <u>интегрировать имеющиеся решения</u> в области проектирования программ компьютерных систем;
			<li> <u>объединит формы представления знаний</u> декларативного и процедурного вида;
			<li> <u>будет иметь широкий спектр средств</u> не только для описания синтаксиса и семантики существующих языков программирования, но и для проектирования новых аналогов;
			<li> <u>будет понятна</u> не только человеку, но и машине;
			<li> <u>обозначит принципы</u>, по которым необходимо проектировать <i>языки программирования нового поколения</i>.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				=> .system_element_180: {
					.system_element_2457;
					.system_element_6250
				};;
			*);
			[<p>К проектированию таких общих теорий, строго говоря, нужно подходить с высокой степенью важности. Проектируемые <i>компьютерные системы</i> должны всегда иметь возможности использовать те свойства, которые им начертаны. Для того, чтобы и эта теория могла быть использована как некоторая система знаний о том, как надо проектировать и использовать <i>языки программирования</i> и программы в <i>программных компьютерных системах</i>, и том, как интерпретировать их <i>программы</i>, необходимо, чтобы эта теория была описана средствами и методами, которыми проектируются эти <i>программные компьютерные системы</i>. Речь идет о том, что принципиально важным подходом к проектированию общей теории программ является <i>онтологический подход</i>.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				=> .system_element_180: {
					.system_element_2457;
					.system_element_6250
				};;
			*);
			[<p>Для воплощения данных идей необходимо изучить и интегрировать опыт, накопленный в области разработки и применения <i>современных языков программирования</i>. Поэтому далее будут рассмотрены результаты других исследований в области проектирования общей теории языков программирования и программ.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*)
		>;;
	*];;

	.system_element_6236
	=> nrel_inclusion: [*

		.system_element_6241
		=> nrel_note: [<p>В большинстве, идеи, предлагаемые в научных работах по исследованию языков программирования, безусловно являются востребованными и полезными для проектирования <i>программных компьютерных систем</i>. Так, идея о том, что языки программирования и программы, реализуемые на них, должны быть организованы в общую таксономию понятий, является основополагающей, поскольку обеспечивает наиболее качественную среду для проектирования и реализации <i>программных компьютерных систем</i>. Общая теория программ нужна не только для того чтобы описывать термины и понятия как некоторую спецификацию, используемую для проектирования <i>программных компьютерных систем</i> (что тоже немаловажно), но и для того, чтобы определять качество языков программирования и программ по таким вопросам, как: "Является ли данный язык языком программирования", "Является ли данное знание программой", "Насколько эффективна данная программа", "Какова степень интеллекта данной программной системы" и так далее. Данные идеи предложены и рассмотрены в работах Raymond Turner.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
			=> .system_element_180: {
				.system_element_6260;
				.system_element_6257
			};;
		*);;

		.system_element_6277
		=> nrel_note: [<p>До сегодняшнего дня существует большое количество аналогов онтологий языков программирования и программ. Также стоит отметить разработанные онтологии программ, система понятий в которых определяется строго и однозначно на формальных языках: языках логики и языках описания грамматик формальных языков. Однако ни одна из них не является таким результатом, который можно было бы использовать при проектировании <i>программных компьютерных систем</i> без существенных проблем. Разработанные онтологии сосредотачивают в себе лишь краткое описание связанных между собой понятий, но общей картины того, как данные онтологии можно использовать в конкретных задачах, почти не видно.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
			=> .system_element_180: {
				.system_element_5369;
				.system_element_6261;
				.system_element_6262;
				.system_element_6257
			};;
		*);;

		.system_element_5250
		=> nrel_note: [<p>Сегодня встречаются и вовсе протовоположные суждения о назначении программ и языков программирования, противоречащие формальным основам Искусственного интеллекта. <i>Программные компьютерные системы</i> должны быть не только понятны человеку, но и сами должны понимать себя, свои возможности, намерения, действия и цели, и понимать себе подобные кибернетические системы. Только таким образом человечество и результаты его деятельности в виде каких-то конкретных систем смогут работать сообща, дополняя друг друга и преумножая свои результаты.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
			=> .system_element_180: {
				.system_element_6254
			};;
			=> nrel_note: [<p>В результате анализа приведенных работ можно сделать вывод о том, что: <i>общей теории программ и языков программирования</i>, которая могла быть задействована при решении любой прикладной задачи и представлении и реализации средств проектирования компьютерных систем, до сих пор не существует;
			<li> унификация представления средств описания и реализации по этим описании как главный аргумент к оперированию смысловому представлению знаний, к полному взаимопониманию между <i>программными компьютерными системами</i> вовсе не рассматривается;
			<li> <i>программы</i> и совокупности этих <i>программ</i> в виде <i>программных компьютерных систем</i> реализуются в большинстве случаев в индивидуальном порядке и плохо документируются, что усложняет их использование, интеграцию с другими программами и <i>программными компьютерными системами</i>, тестирование и совершенствование.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);;
	*];;

	.system_element_6237
	=> nrel_inclusion: [*
		=> .system_element_756: 
			.system_element_6278
		;;

		.system_element_5250
		=> .system_element_319: {
			[<p>Поскольку количество <i>языков программирования</i> растет с увеличением потребности в них, то растут и потребности в описании этих <i>языков программирования</i> для проектирования и разработки <i>программных компьютерных систем</i> на этих языках. То есть, с увеличением количества <i>языков программирования</i> растет не только многообразие форм представления знаний, но и количество <i>программных компьютерных систем</i> на различных формах представления знаний.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Многообразие форм представления знаний в свою очередь требует не только качественной спецификации конкретного <i>языка программирования</i> для разработки <i>программ</i> на этом языке, но и новых требований к существующим разработчикам.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Новые требования к существующим разработчикам влекут за собой появление барьеров и для создания семантически совместимых и интероперабельных <i>программных компьютерных систем</i>, и для обеспечения благоприятной среды для взаимодействия их разработчиков.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*)
		}
		(*
			=> .system_element_909: [<p>Для преодоления данных проблем нет необходимости пересматривать уже существующие решения в области разработки программного обеспечения. Необходимо создавать принципиально новые <i>языки программирования</i>, а также реализовывать <i>программные компьютерные системы</i> на них, в которых будут учтены и решены существующие проблемы. Для этого следует учитывать следующие <i>принципы программирования</i> этих систем.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				=> .system_element_6279: {
					[<p>Расширение многообразия форм представления знаний происходит за счет появления новых синтаксических конструкций в <i>языках программирования</i>. Поэтому разработка <i>языков программирования</i> должна сводиться к уточнению <i>синтаксиса</i> и <i>семантики</i> уже существующих <i>языков программирования</i>. При этом все <i>языки программирования</i> должны являться подъязыками некоторого базового <i>языка программирования</i>.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p>Нет необходимости в создании дополнительных языков, с помощью которых можно описывать семантику программ на <i>языках программирования</i>. Наоборот, <i>язык программирования</i>, на котором разрабатываются программы, должен позволять своими же средствами описывать <i>семантику</i> <i>программ</i> на этом же языке.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p>Документирование <i>программ</i>, в том числе <i>программных компьютерных систем</i>, должно минимизироваться за счет этапов их качественного проектирования и разработки. Смысл конструкций <i>программ</i> <i>языков программирования</i> должен быть настолько ясным и понятным, чтобы использование <i>программ</i> на этом <i>языке программирования</i> не требовало дополнительных ресурсов и инструментов как и у разработчиков этих программ и систем, таких и у новых разработчиков.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p>Появление новых программ должно влечь за собой к расширению <i>Библиотеки многократно используемых программ</i> и к уменьшению количества семантически эквивалетных программ. Таким образом, программы должны быть не только максимальным образом совместимыми между собой, но и открытыми для переиспользования в других <i>программных компьютерных системах нового поколения</i>.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p>Полный жизненный цикл разработки новых программ должен обеспечиваться теми же средствами и <i>языками программирования</i>, на которых разрабатываются эти программы.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p>Сложность программ и <i>программных компьютерных систем</i> должна сводиться к минимуму. То, что выглядит сложно, должно и может быть сделано максимально просто.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p>Построение качественного коллектива <i>программных компьютерных систем</i> может быть обеспечено только совместимостью и интероперабельностью самих систем, и коллективов тех разработчиков, которые их создают.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p>Ключом к решению всех этих проблем является общая <i>Технология проектирования компьютерных систем нового поколения</i>, на базе которой можно построить общую <i>Семантическую теорию программ</i> (дисциплину программирования) для <i>интеллектуальных компьютерных систем нового поколения</i>, построенных по принципам <i>Технологии OSTIS</i>.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
						=> .system_element_180: {
							.system_element_6263
						};;
					*)
				};;
			*);;
			=> nrel_note: [<p>Почему <i>Технология OSTIS</i> является ключом к решению описанных проблем в области проектирования и применения <i>языков программирования</i>?</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				=> .system_element_667: {
					[<p>Стандарт Технологии OSTIS уже реализует базовые средства, необходимые для проектирования и разработки интероперабельных <i>программных компьютерных систем</i>, в основе которых лежит смысловое представление знаний. Это устраняет не только необходимость создания <i>онтологий верхнего уровня</i>, которые должны быть использованы в общей теории программ как базовые для описания понятий этой теории, но и помогает проектировать решения согласованно с другими онтологиями. В результате формируется общая слаженная картина мира, которая (1) непротиворечива, то есть согласована, (2) однозначно трактуема, (3) универсальна и, (4) самое главное, понятна для каждого.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p><i>Технология OSTIS</i> проектируется одним языком унифицированного представления знаний, называемым <i>SC-кодом</i>. Смысл <i>программ</i> и <i>языков программирования</i> понятен и однозначен тогда и только тогда, когда этот смысл описывается на одном общем языке, понятному любой <i>кибернетической системе</i>.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p><i>SC-код</i> синтаксически минимален. Для описания объектов и связей между ними используется минимальное количество знаков. В то же время многообразие этих связей сводится к многобразию знаковых конструкций. Все это обеспечивается за счет представления информации в виде графовых структур.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p>SC-код не просто удобен для описания и проектирования каких-то сложных объектов --- с его помощью можно проектировать и реализовывать любые <i>языки представления знаний</i>, в том числе программ, компьютерные системы и, вообще, описывать реальный мир.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p>Онтологический и компонентный подходы к проектированию любых сложных объектов обеспечивают выполнение главных принципов, по которым должны проектироваться современные системы. То, что реализовано и можно использовать, нужно переиспользовать везде.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*)
				};;
				=> .system_element_180: {
					.system_element_6264;
					.system_element_6265
				};;
			*);;
		*);;

		.system_element_3212
		=> .system_element_3261: 
			.system_element_6280
			(*
				=> .system_element_3261: 
					.system_element_3005;
					.system_element_6281
				;;
			*)
		;;

		.system_element_6281
		=> .system_element_3261: 
			.system_element_6282
			(*
				=> .system_element_3261: 
					.system_element_6283
				;;
			*)
		;;

		.system_element_6284
		=> .system_element_3261: 
			.system_element_6285
			(*
				=> .system_element_3261: 
					.system_element_6286
				;;
			*)
		;;

		.system_element_6287
		=> nrel_note: [<p>Каждая теория должна быть согласована понятийно. Несмотря на то, что в литературе сложилась разное трактование понятия <i>языка программирования</i>, должно быть одно универсальное. Для этого вместо языков программирования далее <u>будем говорить о языках представления методов</u>, а вместо программ этих языков программирования --- о методах как знаковых конструкциях языков представления методов. Такое решение обосновывается тем, что обычно язык выступает в роли инструмента какого-то знания определенного вида, а термин <i>языка программирования</i> является вырожденным, поскольку стоит говорить не о языках, на которых что-то можно программировать, а о языках, на которых можно представлять знания определенного вида, в данном случае --- знания процедурного типа. Сами термины "языка программирования" и "программы" будем считать неосновными идентификаторами понятий "языка представления методов" и "метода", соответственно. Также это правило применяется на все понятия, используемые в данной главе и содержащие термин "метод".</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_6288
		=> nrel_note: [<p>Следует отметить, что общая <i>Семантическая теория программ в ostis-системах</i> не отрицает весь накопленный опыт в сфере разработки современных <i>технологий программирования</i>. Наоборот, предлагаемая в данной главе идея позволяет переиспользовать те проверенные инструменты и методы для наиболее быстрой и качественной реализации программ в сложных <i>программных компьютерных системах</i>.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;
	*];
	=> nrel_conclusion: [<p>Данная предметная область является началом <i>Семантической теории программ для компьютерных систем нового поколения</i>. Логичным развитием данной предметной области будут: уточнение и дополнение понятий <i>Предметной области и онтологии методов</i> для достижения полноты теории;
	<li> описание дочерних предметных областей <i>Предметной области и онтологии методов</i> для конкретных видов методов, а также уточнение денотационной и операционной семантики спецификации этих методов;
	<li> описание возможных путей реализации метаметодов интерпретации методов различных я.п.м.;
	<li> формализация математических моделей для подсчета оценок эффективности методов.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;
*];;
