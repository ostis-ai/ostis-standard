.system_element_6916
=> nrel_inclusion: [*
	<- .system_element_3;
	-> rrel_key_sc_element: .system_element_6917;;

	.system_element_6917
	<- subject_domain;
	-> .system_element_330: 
		.system_element_6397;
		.system_element_6398
	;
	=> .system_element_1416: 
		.system_element_6399;
		.system_element_4293
	;
	=> .system_element_316: <
		.system_element_6918;
		.system_element_6542
	>;;

	.system_element_6919
	=> nrel_explanation: [<p><b><i>Алгоритм Rete</i></b> содержит обобщение логики функционала, ответственного за связь данных (фактов) и алгоритма (продукций) в системах сопоставления с образцом (вид систем: системы основанные на правилах). Продукция состоит из одного или нескольких условий и набора действий, выполняемых если актуальный набор фактов соответствует одному из условий. Условия накладываются на атрибуты фактов, включая их типы и идентификаторы.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> .system_element_138: {
		[<p><i>Алгоритм Rete</i> уменьшает или исключает избыточность условий за счет объединения узлов.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p><i>Алгоритм Rete</i> сохраняет частичные соответствия между фактами при слиянии разных типов фактов. Это позволяет избежать полного вычисления всех фактов при любом изменении в рабочей памяти продукционной системы. Система работает только с самими изменениями.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p><i>Алгоритм Rete</i> позволяет эффективно высвобождать память при удалении фактов.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*)
	};
	=> nrel_note: [<p><i>Алгоритм Rete</i> широко используется для реализации сопоставления с образцом в системах с циклом сопоставление-решение-действие для генерации и логического вывода.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> .system_element_35: .system_element_6918;;

	.system_element_6920
	=> .system_element_138: {
		[<p>Повышена общая производительность сети включая хешированную память для больших массивов данных.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Добавлен алгоритм обратного вывода, работающий на той же сети.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Скорость обратного вывода по сравнению с <i>Rete I</i> повышена значительно.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*)
	};;

	.system_element_6921
	=> .system_element_138: {
		[<p>Алгоритм был признан в 10 раз более быстрым, чем его предшественник <i>Алгоритм Rete II</i></p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*)
	};;

	.system_element_6922
	=> nrel_note: [<p><b><i>Миварный подход</i></b> объединяет и другие научные области компьютерных наук, информатики и дискретной математики, включая: базы данных, экспертные системы, системы логического вывода на основе развития продукций, теорию графов, матрицы, параллельное выполнение программ на кластерах, проектирование новых архитектур компьютеров, массовое суммирование чисел, техническую защиту информации и информационную безопасность, гносеологию (частично и в плане создания новой наиболее мощной модели данных на основе "тройки" "вещь-свойство-отношение"), сервисно-ориентированные архитектуры, компьютерные сети, информационные инфраструктуры, теоретическую робототехнику, многоагентные системы и некоторые другие.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> .system_element_35: .system_element_6542;
	=> nrel_note: [<p><i>Миварный подход</i> объединяет две основные технологии накопления данных и обработки информации:
	<li></p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_note: [<p>Суть <i>миварного подхода</i> в объединении баз данных и систем логико-вычислительной обработки в единые эволюционно развивающиеся системы, позволяющие собрать воедино все различные научные разработки на основе сервисно-ориентированных архитектур и технологий интеллектуальных агентов --- многоагентных систем.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_explanation: [<p>Миварные сети основаны на продукционном подходе "если, то..." с переходом к более сложной структуре правил с предусловиями, условиями, ограничениями, действиями и последействиями. Это позволяет записывать все причинно-следственные отношения, включая и все возможные формы предикатов и подобных логических выражений. Значение предикатов и поиска истинных выражений не отрицается, а только создается возможность и для их реализации, и для реализации всех возможных других представлений правил в виде: сервисов, процедур, продукций, подпрограмм и так далее. Такой подход позволяет работать одновременно с разными описаниями предметных областей, прибавляя к предикатам и продукции, и нейросети, и генетические алгоритмы, и традиционные вычислительные процедуры, и все другие в виде универсальных миварных отношений, которые представляются и хранятся перед обработкой в миварном пространстве.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;
*];;
