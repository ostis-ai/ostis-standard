.system_element_6737
=> nrel_inclusion: [*
	<- .system_element_3;
	-> rrel_key_sc_element: .system_element_6738;;

	.system_element_6738
	<- subject_domain;
	-> .system_element_330: 
		.system_element_6397;
		.system_element_6398
	;
	=> .system_element_1416: 
		.system_element_6399;
		.system_element_4293
	;
	=> .system_element_316: <
		.system_element_6739;
		.system_element_6740
	>;;

	.system_element_6741
	<- .system_element_6397;
	=> nrel_note: [<p>База данных в языке называется рабочей памятью (working memory) и состоит из нескольких сотен объектов, каждый из которых имеет свой набор атрибутов. Объект вместе с парами <атрибут -- значение> называется элементом рабочей памяти.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> .system_element_35: .system_element_6739;
	=> nrel_note: [<p>Основная задача, которую поставили перед собой разработчики языка <i>OPS5</i>, добиться максимально высокой эффективности выполнения продукционной программы. Интерпретатор системы порождает конфликтное множество, каждый элемент которого представляет собой пару <имя продукции, список элементов рабочей памяти, которые являются означиваниями для образцов продукции>. Каждая продукция в <i>OPS5</i> состоит из символа Р, имени продукции, левой части, символа --> и правой части.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_note: [<p>В <i>OPS5</i> выделены три типа действий:
	<li>
	<li></p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> .system_element_785: .system_element_6742
	(*
		<=> nrel_semantic_equivalence: "file://images/sd_sc_product_program_lang_denot_sem/ops5_production_rule_example.png"
		(*
			<- concept_file;;
			=> nrel_format: format_png;;
		*);;
		=> nrel_note: [<p>Данные в рабочей памяти структурированы и переменные появляются в угловых скобках. Название структуры данных, такое как "goal" (цель) и "physical-object" (физический объект), является первым буквальным в условиях; поля структуры начинаются с "". На негативное состояние указывает "--".</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;
		=> nrel_note: [<p>Если несколько объектов подвешены к потолку, каждый с другой лестницей рядом, поддерживающей обезьяну с пустыми руками, конфликтный набор будет содержать столько же продукций правил продукции, полученных из одной и той же продукции "Holds::Object-Ceiling". На этапе разрешения конфликта позже будет выбрано, какие продукции запускать.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;
		=> nrel_note: [<p>Когда обезьяна держит подвешенный объект, статус цели устанавливается на "удовлетворено", и то же производственное правило больше не может применяться, поскольку его первое условие не выполняется.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;
	*);
	=> nrel_note: [<p>Продукционные правила в <i>OPS5</i> применяются ко всем продукциям структур данных, которые соответствуют условиям и соответствуют привязкам переменных.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;

	.system_element_6740
	=> nrel_explanation: [<p><b><i>CLIPS</i></b> использует продукционную модель представления знаний и поэтому содержит три основных элемента:

	<li>

	<li>База фактов представляет исходное описание задачи. База правил содержит операторы, которые преобразуют состояния проблемы, приводя его к решению --- целевому состоянию.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_note: [<p>Механизм логического вывода <i>CLIPS</i> сопоставляет факты из базы фактов и правила из базы правил и выясняет, какие из правил можно активизировать. Это выполняется циклически, причем каждый цикл (так называемый продукционный цикл или цикл распознавания действия) состоит из трех основных фаз:
	<li>
	<li></p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_note: [<p>Факты --- это одна из основных форм представления информации в системе <i>CLIPS</i>. Каждый факт представляет фрагмент информации, который был помещен в текущий список фактов, называемый fact-list. Факт представляет собой основную единицу данных, используемую правилами.Если при добавлении нового факта к списку обнаруживается, что он полностью совпадает с одним из уже включенных в список фактов, то эта операция игнорируется.Факт может описываться индексом или адресом. Всякий раз, когда факт добавляется (изменяется), ему присваивается уникальный целочисленный индекс. Факт также может задаваться при помощи адреса.Идентификатор факта --- это короткая запись для отображения факта на экране. Она состоит из символа f и записанного через тире индекса факта. Существует два формата представления фактов: позиционный и непозиционный. Позиционные факты состоят из выражения символьного типа, за которым следует последовательность (возможно, пустая) из полей, разделенных пробелами. Вся запись заключается в скобки. Обычно первое поле определяет "отношение", которое применяется к оставшимся полям.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> .system_element_35: .system_element_6740;;
*];;
