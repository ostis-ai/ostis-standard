.segment_reusable_component_concept = [*
.system_element_2800
=> nrel_inclusion: [*

	.system_element_572
	=> nrel_idtf: [<p>типовой компонент ostis-систем</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_idtf: [<p>повторно используемый компонент ostis-систем</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_idtf: [<p>многократно используемый компонент OSTIS</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_idtf: [<p>ip-компонент ostis-систем</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> .system_element_269: [<p>многократно используемый компонент</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> .system_element_1977: [<p>МИК ostis-систем</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	<= nrel_inclusion: .system_element_2934;
	<= nrel_inclusion: .system_element_2935
	(*
		=> nrel_explanation: [<p>Целостная часть ostis-системы, которая содержит все те (и только те) sc-элементы, которые необходимы для её функционирования в ostis-системе.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;
	*);
	=> .system_element_1120: [<p>многократно используемый компонент ostis-систем --- компонент некоторой ostis-системы, который может быть использован в рамках другой ostis-системы.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
		=> .system_element_122: .system_element_2676;;
	*);
	=> nrel_explanation: [<p>Компонент ostis-системы, который может быть использован в других ostis-системах (<em>дочерних ostis-системах</em>).</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_explanation: [<p>Компонент некоторой <em>материнской ostis-системы</em>, который может быть использован в некоторой <em>дочерней ostis-системе</em>.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_explanation: [<p>многократно используемый компонент ostis-систем --- это общий компонент (общая часть) для некоторого множества ostis-систем, который многократно используется, дублируется и входит в состав некоторого множества ostis-систем.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_note: [<p>Для включения многократно используемого компонента в некоторую систему, его необходимо установить в эту систему, то есть скопировать в нее все sc-элементы компонента и, при необходимости, вспомогательные файлы, такие как исходные или скомпилированные файлы компонента.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_note: [<p>многократно используемый компонент ostis-систем должен иметь унифицированную спецификацию и иерархию для поддержки <u>совместимости</u> с другими компонентами.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_note: [<p>Совместимость многократно используемых компонентов приводит систему к новому качеству, к дополнительному расширению множества решаемых задач при интеграции компонентов.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> .system_element_2936: {
		[<p>Существует техническая возможность встроить многократно используемый компонент в <em>дочернюю ostis-систему</em>.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Полнота многократно используемого компонента: компонент должен в полной мере выполнять свои функции, соответствовать своему назначению.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Связность многократно используемого компонента: компонент должен логически выполнять только одну задачу из предметной области, для которой он предназначен. Многократно используемый компонент должен выполнять свои функции наиболее общим образом, чтобы круг возможных систем, в которые он может быть встроен, был наиболее широким.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Совместимость многократно используемого компонента: компонент должен стремиться повышать уровень <u>договороспособности</u> ostis-систем, в которые он встроен, и иметь возможность <u>автоматической</u> интеграции в другие системы.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Самодостаточность компонентов (или групп компонентов) технологии, то есть способности их функционировать отдельно от других компонентов без утраты целесообразности их использования.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*)
	};;

	.system_element_358
	-> {
		.system_element_572;
		.system_element_2935
	};
	=> .system_element_283: [<p>многократно используемый компонент ostis-систем имеет <u>спецификацию, достаточную для установки</u> этого компонента в <em>дочернюю ostis-систему</em>. Спецификация является частью базы знаний <em>библиотеки многократно используемых компонентов</em> соответствующей <em>материнской ostis-системы</em>. Есть техническая возможность встроить многократно используемый компонент в дочернюю ostis-систему.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;

	.system_element_2846
	<= nrel_inclusion: parameter;
	-> .system_element_2852
	(*
		=> nrel_note: [<p>класс многократно используемого компонента ostis-систем является важной частью спецификации компонента, позволяющей лучше понять назначение и область применения данного компонента, а также класс многократно используемого компонента является важнейшим критерием поиска компонентов в библиотеке ostis-систем.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;
	*);
	-> .system_element_2937;
	-> .system_element_2938;;

	.system_element_572
	=> nrel_note: [<p>Интеллектуальная система, спроектированная по <i>Технологии OSTIS</i>, представляет собой интеграцию <i>многократно используемых компонентов баз знаний</i>, <i>многократно используемых компонентов решателей задач</i> и <i>многократно используемых компонентов интерфейсов</i>.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
		=> .system_element_122: .system_element_2819;;
	*);
	=> nrel_note: [<p>Основной признак классификации многократно используемых компонентов является признак предметной области, к которой относится компонент. Здесь структура может быть довольно богатой в соответствии с иерархией областей человеческой деятельности. Существует также множество предметно-независимых многократно используемых компонентов, которые могут использоваться в любой предметной области.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
		=> .system_element_122: .system_element_2822;;
	*);
	=> nrel_subdividing: {
		.system_element_2701
		(*
			=> nrel_idtf: [<p>многократно используемый компонент базы знаний</p>];;
			<- .system_element_2852;;
			=> nrel_note: [<p>Важнейшим признаком классификации многократно используемых компонентов баз знаний является вид знаний.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				=> .system_element_180: .system_element_2939;;
			*);;
			=> nrel_inclusion: semantic_neighborhood
			(*
				-> .system_element_2940;;
				-> .system_element_2941;;
			*);;
			=> nrel_inclusion: .system_element_2709
			(*
				-> .system_element_2942;;
			*);;
			=> nrel_inclusion: knowledge_base;;
			=> nrel_inclusion: .system_element_2943
			(*
				-> .system_element_2944;;
				-> .system_element_2945;;
			*);;
		*);
		.system_element_2946
		(*
			=> nrel_idtf: [<p>многократно используемый компонент решателя задач</p>];;
			<- .system_element_2852;;
			=> nrel_note: [<p>Важнейшим признаком классификации многократно используемых компонентов баз решателя задач является используемая модель решения задачи.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
			=> nrel_inclusion: atomic_abstract_sc_agent
			(*
				-> .system_element_2947;;
			*);;
			=> nrel_inclusion: .system_element_2948;;
			=> nrel_inclusion: .system_element_733;;
			=> nrel_inclusion: .system_element_2949;;
		*);
		.system_element_2950
		(*
			=> nrel_idtf: [<p>многократно используемый компонент интерфейса</p>];;
			<- .system_element_2852;;
			=> nrel_note: [<p>Важнейшим признаком классификации многократно используемых компонентов баз решателя задач является вид интерфейса в соответствии с классификацией интерфейсов.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
			=> nrel_inclusion: .system_element_2731;;
		*)
	};
	=> nrel_subdividing: .system_element_2951
	(*
		<= nrel_inclusion: .system_element_2852;;
		<=> .system_element_200: {
			.system_element_431
			(*
				-> .system_element_2947;;
				=> nrel_explanation: [<p>Многократно используемый компонент, который в текущем состоянии библиотеки ostis-систем рассматривается как неделимый, то есть не содержит в своем составе других компонентов.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_note: [<p>Принадлежность МИК ostis-систем классу атомарных компонентов зависит от того, как специфицирован этот компонент, и от существующих на данный момент компонентов в библиотеке.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
					=> nrel_note: [<p>В библиотеку ostis-систем нельзя опубликовать многократно используемый компонент как атомарный, в составе которого есть какой-либо другой известный библиотеке ostis-систем компонент.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);;
				=> nrel_note: [<p>В общем случае атомарный компонент может перейти в разряд неатомарных в случае, если будет принято решение выделить какую-то из его частей в качестве отдельного компонента. Все вышесказанное, однако, не означает, что даже в случае его платформенной независимости, атомарный компонент всегда хранится в sc-памяти как сформированная sc-структура. Например, платформенно-независимая реализация sc-агента всегда будет представлена набором <i>scp-программ</i>, но будет <i>атомарным многократно используемым компонентом ostis-систем</i> в случае, если ни одна из этих программ не будет представлять интереса как самостоятельный компонент.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			.system_element_323
			(*
				=> nrel_idtf: [<p>составной многократно используемый компонент ostis-систем</p>];;
				-> .system_element_2952;;
				=> nrel_explanation: [<p>Многократно используемый компонент, который в текущем состоянии библиотеки ostis-систем содержит в своем составе другие атомарные или неатомарные компоненты.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_note: [<p>Неатомарный многократно используемый компонент не зависит от своих частей. Без какой-либо части неатомарного компонента его назначение сужается.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_note: [<p>В общем случае неатомарный компонент может перейти в разряд атомарных в случае, если будет принято решение по каким-либо причинам исключить все его части из рассмотрения в качестве отдельных компонентов. Следует отметить, что неатомарный компонент необязательно должен складываться <u>полностью</u> из других компонентов, в его состав могут также входить и части, не являющиеся самостоятельными компонентами. Например, в состав реализованного на <i>Языке SCP</i> <i>sc-агента</i>, являющего <i>неатомарным многократно используемым компонентом</i> могут входить как <i>scp-программы</i>, которые могут являться многократно используемыми компонентами (а могут и не являться), а также агентная <i>scp-программа</i>, которая не имеет смысла как многократно используемый компонент.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_note: [<p>Спецификация неатомарного многократно используемого компонента должна содержать информацию о том, из каких компонентов он состоит, используя отношение декомпозиция*. При этом sc-структура, обозначающая неатомарный компонент не обязана содержать все sc-элементы компонентов, на которые она декомпозируется, достаточно, чтобы неатомарному компоненту принадлежали знаки всех тех компонентов, из которых он состоит. Должно быть полное перечисление составных компонентов.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*)
		};;
	*);
	=> nrel_subdividing: .system_element_2953
	(*
		<= nrel_inclusion: .system_element_2852;;
		<=> .system_element_200: {
			.system_element_324
			(*
				-> .system_element_2954;;
				=> nrel_explanation: [<p>Многократно используемый компонент, который зависит хотя бы от одного другого компонента библиотеки ostis-систем, то есть не может быть встроен в дочернюю ostis-систему без компонентов, от которых он зависит.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			.system_element_2834
			(*
				-> subject_domain_of_sets;;
				=> nrel_explanation: [<p>Многократно используемый компонент, который не зависит ни от одного другого компонента библиотеки ostis-систем.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*)
		};;
	*);
	=> nrel_subdividing: .system_element_2955
	(*
		<= nrel_inclusion: .system_element_2852;;
		<=> .system_element_200: {
			.system_element_2836
			(*
				=> nrel_subdividing: {
					.system_element_322;
					.system_element_2837
				};;
			*);
			.system_element_2838
		};;
		=> nrel_note: [<p>На данном этапе развития <i>Технологии OSTIS</i> более удобным является хранение компонентов в виде исходных текстов.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;
	*);
	=> nrel_subdividing: .system_element_2956
	(*
		<= nrel_inclusion: .system_element_2852;;
		<=> .system_element_200: {
			.system_element_2957
			(*
				=> nrel_explanation: [<p>Под платформенно-зависимым многократно используемым компонентом OSTIS понимается компонент, частично или полностью реализованный при помощи каких-либо сторонних с точки зрения <i>Технологии OSTIS</i> средств.</p>];;
				=> .system_element_238: [<p>Интеграция таких компонентов в интеллектуальные системы может сопровождаться дополнительными трудностями, зависящими от конкретных средств реализации компонента.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> .system_element_1797: [<p>В качестве возможного преимущества платформенно-зависимых многократно используемых компонентов ostis-систем можно выделить их, как правило, более высокую производительность за счет реализации их на более приближенном к платформе уровне.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_note: [<p>С точки зрения <i>Технологии OSTIS</i> любая ostis-платформа является платформенно-зависимым многократно используемым компонентом.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_note: [<p>В общем случае платформенно-зависимый многократно используемый компонент ostis-систем может поставляться как в виде набора исходных кодов, так и в скомпилированном виде. Процесс интеграции платформенно-зависимого многократно используемого компонента ostis-систем в дочернюю систему, разработанную по <i>Технологии OSTIS</i>, сильно зависит от технологий реализации данного компонента и в каждом конкретном случае может состоять из различных этапов. Каждый платформенно-зависимый многократно используемый компонент ostis-систем должен иметь соответствующую подробную, корректную и понятную инструкцию по его установке и внедрению в дочернюю систему.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_inclusion: .system_element_256;;
				=> nrel_inclusion: abstract_sc_agent_is_not_implemented_on_the_scp_language;;
			*);
			.system_element_2835
			(*
				=> nrel_explanation: [<p>Под платформенно-независимым многократно используемым компонентом ostis-систем понимается компонент, который полностью представлен на <i>SC-коде</i>.</p>];;
				=> nrel_inclusion: .system_element_2706;;
				=> nrel_inclusion: .system_element_2958;;
				=> nrel_inclusion: new_scp_program;;
				=> nrel_note: [<p>В случае <i>неатомарного многократно используемого компонента</i> платформенная независимость означает, что <u>все</u> более простые компоненты, входящие в его состав также обязаны быть платформенно-независимыми многократно используемыми компонентами ostis-систем.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_note: [<p>Процесс интеграции платформенно-зависимого многократно используемого компонента ostis-систем в дочернюю систему, разработанную по Технологии OSTIS, существенно упрощается за счет использования общей унифицированной формальной основы представления и обработки знаний.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_note: [<p>Наиболее ценными являются платформенно-независимые многократно используемые компоненты ostis-систем.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*)
		};;
	*);
	=> nrel_subdividing: .system_element_2959
	(*
		<= nrel_inclusion: .system_element_2852;;
		<=> .system_element_200: {
			.system_element_2840
			(*
				=> nrel_idtf: [<p>многократно используемый компонент, при установке которого система не требует перезапуска</p>];;
				=> .system_element_417: {
					.system_element_2960;
					.system_element_2706
				};;
			*);
			.system_element_2841
		};;
		=> nrel_note: [<p>Процесс интеграции компонентов разных видов на разных этапах жизненного цикла osits-систем бывает разным. Наиболее ценными являются компоненты, которые могут быть интегрированы в работающую систему <u>без</u> прекращения её функционирования. Некоторые системы, особенно системы управления, нельзя останавливать, а устанавливать и обновлять компоненты нужно.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;
	*);
	=> nrel_inclusion: .system_element_2961
	(*
		=> nrel_idtf: [<p>типовая подсистема ostis-систем</p>];;
		<= nrel_inclusion: ostis_system;;
		<= nrel_inclusion: .system_element_323;;
		=> nrel_explanation: [<p><em>встраиваемая ostis-система</em> --- это <i>неатомарный многократно используемый компонент</i>, который состоит из <i>базы знаний</i>, <i>решателя задач</i> и <i>интерфейса</i>.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;
		=> .system_element_417: {
			.system_element_2701;
			.system_element_2583;
			.system_element_2738
		};;
		<- .system_element_2852;;
		-> .system_element_2962;;
		-> .system_element_2963;;
		-> .system_element_2964;;
		=> nrel_inclusion: .system_element_2848;;
		=> nrel_inclusion: .system_element_1780;;
		=> nrel_inclusion: .system_element_2965;;
		=> nrel_note: [<p>Особенность <i>встраиваемых ostis-систем</i> в том, что интеграция целых интеллектуальных систем предполагает интеграцию баз знаний этих систем, интеграцию их решателей задач и интеграцию их интеллектуальных интерфейсов. При интеграции встраиваемых ostis-систем база знаний встраиваемой системы становится частью базы знаний системы, в которую она встраивается. Решатель задач встраиваемой ostis-системы становится частью решателя задач системы, в которую она встраивается. И интерфейс встраиваемой ostis-системы становится частью интерфейса системы, в которую она встраивается. При этом встраиваемая система является целостной и может функционировать отдельно от других ostis-систем, в отличие от других многократно используемых компонентов.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;
		=> nrel_note: [<p><i>встраиваемые ostis-системы</i> зачастую являются предметно-независимыми многократно используемыми компонентами. Таким образом, например, встраиваемая ostis-система в виде среды проектирования баз знаний может быть встроена как в систему из предметной области по геометрии, так и в систему управления аграрными объектами.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;
		=> nrel_note: [<p><i>встраиваемая ostis-система</i>, как и любой другой многократно используемый компонент ostis-систем, должна поддерживать семантическую совместимость ostis-систем. Как сама встраиваемая ostis-система, так и все ее компоненты должны быть специфицированы и согласованы. Компоненты встраиваемых ostis-систем могут быть заменены на другие, имеющие то же назначение, например, естественно-языковой интерфейс может иметь различные варианты базы знаний в зависимости от естественного языка, поддерживаемого системой, различные варианты интерфейса, в зависимости от требований и удобства пользователей и также различные варианты реализации решателя задач для обработки естественного языка, которые могут использовать различные модели, однако решать одну и ту же задачу. Встраиваемая ostis-система связывается с системой, в которую она встроена с помощью отношения <b><i>встроенная ostis-система*</i></b>, которое является подмножеством отношения <i>встроенная кибернетическая система*</i>.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;
	*);;
*];
=> nrel_comment: [<p>Завершили "Сегмент. Понятие многократно используемого компонента ostis-систем"</p>];;

*];;