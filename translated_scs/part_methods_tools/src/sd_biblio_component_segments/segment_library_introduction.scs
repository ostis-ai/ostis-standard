.segment_library_introduction = [*
.system_element_2797
=> nrel_inclusion: [*

	.system_element_2966
	=> .system_element_897: {
		[<p>Важнейшим этапом эволюции любой технологии является переход к компонентному проектированию на основе постоянно пополняемый библиотеки многократно используемых компонентов.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
			=> .system_element_2936: {
				[<p>Универсальный язык представления знаний.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>Универсальная процедура интеграции знаний в рамках указанного языка.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>Разработка стандарта, обеспечивающего семантическую совместимость интегрируемых знаний (таким стандартом является согласованная система используемых понятий).</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*)
			};;
		*);
		[<p>Повторное использование готовых компонентов широко применяется во многих отраслях, связанных с проектированием различного рода систем, поскольку позволяет уменьшить трудоемкость разработки и ее стоимость (путем минимизации количества труда за счет отсутствия необходимости разрабатывать какой-либо компонент), повысить качество создаваемого контента и снизить профессиональные требования к разработчикам компьютерных систем. Таким образом, осуществляется  переход от программирования компонентов или целых систем к их проектированию (дизайну, сборке) на основе готовых компонентов. <b><i>компонентное проектирование интеллектуальных компьютерных систем</i></b> предполагает подбор существующих компонентов, способных решить поставленную задачу целиком или декомпозицию задачи на подзадачи с выделением компонентов для каждой из них.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
			=> .system_element_122: 
				.system_element_2805;
				.system_element_2679;
				.system_element_2677
			;;
		*)
	};
	=> .system_element_2389: [<p>Позволяет уменьшить трудоемкость создания компьютерных систем и их стоимость (путем минимизации количества труда за счет отсутствия необходимости разрабатывать какой-либо компонент), повысить качество создаваемых компьютерных систем и снизить профессиональные требования к разработчикам этих систем.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_explanation: [<p>Компонентное проектирование интеллектуальных компьютерных систем предполагает подбор существующих компонентов, способных решить поставленную задачу целиком или декомпозицию задачи на подзадачи с выделением компонентов для каждой из них.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> .system_element_1797: [<p>Проектируемые системы по предлагаемой технологии обладают высоким уровнем гибкости, их разработка осуществляется поэтапно, переходя от одной целостной версии системы к другой. При этом стартовая версия системы может быть ядром соответствующего класса систем, входящим в библиотеку многократно используемых компонентов.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;

	.system_element_2967
	-> .system_element_2969: .system_element_2968;
	=> .system_element_1797: [<p>Позволяет проектировать интеллектуальные системы, комбинируя уже существующие компоненты, выбирая нужные из соответствующих библиотек. Использование готовых компонентов предполагает, что распространяемый компонент верифицирован и документирован, а возможные ошибки и ограничения устранены либо специфицированы и известны. Создание <i>библиотеки многократно используемых компонентов</i> не означает пересоздание всех уже существующих современных продуктов информационных технологий. Технология компонентного проектирования интеллектуальных компьютерных систем предполагает использование огромного опыта в разработке современных компьютерных систем, однако обязательным является <u>спецификация</u> каждого компонента (как вновь созданного, так и интегрируемого существующего) для обеспечения возможности его установки и совместимости с другими компонентами и системами. Тем не менее эффективная технология компонентного проектирования появится только тогда, когда сформируется "критическая масса" разработчиков прикладных систем, участвующих в пополнении <i>библиотек многократно используемых компонентов</i> проектируемых систем.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
		=> .system_element_122: 
			.system_element_2805;
			.system_element_2704
		;;
	*);
	=> .system_element_1814: .system_element_2970
	(*
		=> nrel_note: [<p>Проблемы реализации компонентного подхода к проектированию интеллектуальных компьютерных систем наследуют проблемы современных <i>технологий проектирования интеллектуальных систем</i>.</p>];;
		<=> .system_element_200: {
			[<p><u>Несовместимость</u> компонентов, разработанных в рамках разных проектов, вследствие отсутствия унификации в принципах представления различных видов знаний в рамках одной <i>базы знаний</i>, и, как следствие, отсутствие унификации в принципах выделения и спецификации <b><i>многократно используемых компонентов</i></b>, которое приводит к несовместимости компонентов, разработанных в рамках разных проектов.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				=> nrel_note: [<p>Большинство существующих систем создано как автономные программные продукты, которые не могут быть использованы в качестве компонентов других систем. Необходимо использовать либо целую систему, либо ничего. Небольшое число систем поддерживает компонентно-ориентированную архитектуру способную интегрироваться с другими системами. Однако их интеграция возможна при условии использования одинаковых технологий и только при проектировании одной командой разработчиков.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
					=> .system_element_122: 
						.system_element_2808;
						.system_element_2809
					;;
				*);;
				=> nrel_note: [<p>Многократная повторная разработка уже имеющихся технических решений обусловлена либо тем, что известные технические решения <u>плохо</u> интегрируются в разрабатываемую систему, либо тем, что эти технические решения трудно найти. Данная проблема актуальна как в целом в сфере разработки компьютерных систем, так и в сфере разработки систем, основанных на знаниях, поскольку в системах такого рода степень согласованности различных видов знаний влияет на возможность системы решать нетривиальные задачи.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			[<p>Невозможность автоматической интеграции компонентов в систему <u>без</u> ручного вмешательства пользователя.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Автоматическое обновление компонентов приводит к рассогласованности как отдельных модулей компьютерных систем, так и самих систем между собой.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Отсутствие классификации компонентов на различных уровнях детализации.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Не ведётся разработка стандартов, обеспечивающих совместимость этих компонентов.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Не проводится тестирование, верификация и анализ качества компонентов, не выделяются преимущества, недостатки, ограничения компонентов.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Многие компоненты используют для идентификации язык разработчика (как правило, английский), и предполагается, что все пользователи будут использовать этот же язык. Однако для многих приложений это недопустимо --- понятные только разработчику идентификаторы должны быть скрыты от конечных пользователей, которые должны быть в состоянии выбрать язык для идентификаторов, которые они видят.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Отсутствие средств поиска компонентов, удовлетворяющих заданным критериям.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*)
		};;
		=> .system_element_122: .system_element_2676;;
	*);
	=> nrel_note: [<p><em>компонентное проектирование интеллектуальных компьютерных систем</em> возможно только в том случае, если отбор компонентов будет осуществляться на основе тщательного анализа качества этих компонентов. Одним из важнейших критериев такого анализа является уровень семантической совместимости анализируемых компонентов со всеми компонентами, имеющимися в текущей версии библиотеки.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> .system_element_276: .system_element_2971
	(*
		<=> .system_element_200: {
			[<p>Обеспечение совместимости (интегрируемости) компонентов интеллектуальных компьютерных систем на основе унификации представления этих компонентов.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Четкое разделение процесса разработки формальных описаний интеллектуальных компьютерных систем и процесса их реализации по этому описанию.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Четкое разделение разработки формального описания проектируемой интеллектуальной системы от разработки различных вариантов интерпретации таких формальных описаний систем.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Наличие онтологии компонентного проектирования интеллектуальных компьютерных систем, включающей (1) описание методов компонентного проектирования, (2) модель <i>библиотеки многократно используемых компонентов</i>, (3) модель <i>спецификации многократно используемых компонентов</i>, (4) полную <i>классификацию многократно используемых компонентов</i>, (5) описание средств взаимодействия разрабатываемой интеллектуальной компьютерной системы с <i>библиотеками многократно используемых компонентов</i>.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Наличие <i>библиотек многократно используемых компонентов интеллектуальных компьютерных систем</i>, включающих спецификации компонентов.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>Наличие средств взаимодействия разрабатываемой интеллектуальной компьютерной системы с библиотеками многократно используемых компонентов для установки любых видов компонентов и управления ими в создаваемой системе.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				=> nrel_note: [<p>Под установкой компонента понимается его транспортировка в систему (копирование sc-элементов и/или скачивание файлов компонента), а также выполнение вспомогательных действий для того, чтобы компонент мог функционировать в создаваемой системе.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*)
		};;
		=> .system_element_122: 
			.system_element_2806;
			.system_element_2704;
			.system_element_2807
		;;
		=> nrel_note: [<p>Для того, чтобы решить возникшие проблемы при проектировании интеллектуальных систем и библиотек их многократно используемых компонентов, необходимо придерживаться общих принципов технологии проектирования интеллектуальных компьютерных систем, а также выполнить эти требования.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;
	*);;
*];
=> nrel_comment: [<p>Завершили "Сегмент. Введение в Предметную область и онтологию комплексной библиотеки многократно используемых семантически совместимых компонентов ostis-систем"</p>];;

*];;