.segment_sem_comp_principles = [*
.system_element_4683
=> nrel_inclusion: [*

	.system_element_4684
	=> nrel_idtf: [<p>информационно-логическая или комбинаторная задачи по переработке сложноструктурированных баз данных</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_idtf: [<p>класс задач, предполагающих переработку нечисловой сложноструктурированной информации и допускающих при этом отсутствие точного алгоритма их решения</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_note: [<p>Понятие <i>информационно-логических задач</i> фактически совпадает по смыслу с широко используемым в последнее время понятием задач искусственного интеллекта (<i>интеллектуальных задач</i>), что позволяет использовать оба эти термина.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_note: [<p>Разработка средств решения задач того или иного класса в настоящее время обычно осуществляется путем создания <i>языка программирования высокого уровня</i>, ориентированного на этот класс задач, и путем реализации такого языка на современных компьютерах, т.е. путем создания транслятора. Поскольку логика решения задач искусственного интеллекта плохо согласуется с современными языками программирования, более целесообразной является разработка принципиально новых языков, отражающих на уровне их элементарных операций основные логические механизмы решения задач рассматриваемого класса. Такие языки программирования обычно называют языками сверх-высокого уровня или непроцедурными языками. Реализация языков сверх-высокого уровня на современных компьютерах представляется весьма сложной в силу большого разрыва между языками этого класса и внутренними языками современных компьютеров, для преодоления которого создание эффективного транслятора оказывается практически невозможным.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_explanation: [<p>Таким образом, состояние проблемы автоматизации решения задач искусственного интеллекта (информационно-логических задач) в настоящее время можно охарактеризовать тем, что эта проблема входит в противоречие c принципами логической организации современных компьютеров и, в первую очередь, с используемыми в современных компьютерах внутренними языками. Причины плохой приспособленности современных компьютеров к решению информационно-логических задач:
	<ul>
		<li> в современных компьютерах при работе со сложноструктурированными базами данных время, затрачиваемое на информационный поиск, на 2-3 порядка превышает время, затрачиваемое на собственно переработку;
		<li> в современных компьютерах имеет место весьма низкий уровень аппаратно реализуемых операций над нечисловыми данными;
		<li> представление информации в памяти современных компьютеров имеет уровень весьма далекий от семантического, что делает переработку информации довольно громоздкой, требующей учета большого количества деталей, касающихся не смысла перерабатываемой информации, a способа ее представления в памяти;
		<li> в современных компьютерах громоздко реализуются даже простейшие процедуры логического вывода.</li>
	<ul>Перечисленные причины, по существу, не устраняются также и в развиваемых в настоящее время подходах к построению нетрадиционных высокопроизводительных компьтеров, ибо, в основном, все эти подходы (даже если они достаточно далеко отходят от предложенных фон-Нейманом принципов организации вычислительных машин) неявно сохраняют точку зрения на компьютер как на большой арифмометр и тем самым сохраняют ее ориентацию на задачи числового характера. Очевидно, что эффективность этих машин будет прежде всего определяться степенью близости их внутреннего языка к языкам непроцецурного типа (к языкам сверх-высокого уровня). Учитывая указанное назначение таких машин, их естественно назвать не вычислительными машинами, a математическими машинами или даже мыслящими машинами.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;

	.system_element_4685
	=> .system_element_4686: .system_element_4684;
	=> nrel_idtf: [<p>машина, реализующая стремление так организовать процесс переработки информации, чтобы он был наиболее близок к семантическому (содержательному) уровню</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> .system_element_4687: {
		[<p>разработка семантического способа представления перерабатываемой информации в памяти машины</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>разработка такого внутреннего языка, запись программ на котором была бы максимально близка к тому, что называют записью алгоритма на содержательном уровне</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>разработка и исследование способов семантического представления информации различного вида</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>разработка и исследование принципов организации развитой ассоциативной памяти для непосредственного хранения семантического представления информации</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>разработка и исследование языка программирования высокого уровня, который (I) ориентирован на решение информационно-логических задач; (2) обеспечивает непосредственную реализацию простых процедур логического вывода. (3) согласован c выбранным способом семантического представления перерабатываемой информации, (4) приспособлен к использованию в качестве внутреннего языкё параллельной однородной структуры, имеющей распределенную ассоциативную память для хранения сложноструктурированных данных</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>разработка и исследование принципов построения и принципов параллельного взаимодействия функциональных средств, обеспечивающих непосредственную переработку семантического представления информации в распределенной ассоциативной памяти и реализующих управление потоком словноструктурированных данных</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>экспериментальная проверка полученных результатов</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*)
	};
	=> nrel_note: [<p>Исследования по системам искусственного интеллекта убедительно показали, что способ представления знаний в их памяти, точнее степень его близости к семантическому, является фактором, во многом определяющим эффективность таких систем.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> .system_element_4688: {
		[<p>такие машины целесообразно строить как машины, манипулирующие графовыми структурами непосредственно на физическом уровне</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
			=> nrel_explanation: [<p>Предполагается создание структурно-перестраиваемой (графовой) памяти. Такая память состоит из ячеек, однозначно соответствующих вершинам хранимого в памяти графа, но, в отличие от обычной памяти, эти ячейки связываются не фиксированными условными связями, задающими фиксированную последовательность (порядок) ячеек в памяти, a реально (физически) проводимыми связями произвольной конфигурации. Эти связи соответствуют дугам, ребрам, гиперребрам записанного в памяти графа. Очевидно, что в ходе переработки информации в структурно-перестраиваемой памяти меняются на только и даже не столько состояния ячеек памяти, как это имеет место в обычной памяти, сколько конфигурация связей между этими ячейками. Т.е. в структурно-перестраиваемой памяти в ходе переработки информации не только перераспределяются метки на вершинах записанного в памяти графа, но и меняется структура самого этого графа.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);
		[<p>в качестве внутреннего языка таких машин целесообразно использовать язык типа PROLOG</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
			=> nrel_explanation: [<p>Разработка языка типа PROLOG, предназначенного к использованию в качестве внутреннего языка программирования для машин co структурно-перестраиваемой памятью требует решения нетривиальной задачи согласования графового способа представления данных в структурно-перестраиваемой памяти и способа записи в этой же памяти самих программ, описывающих переработку этих данных. Переход на графовый способ кодирования программ и данных в структурно-перестраиваемой памяти обеспечивает компактность их представления и существенно упрощает аппаратурную реализацию операций над сложными структурами. Говоря об аппаратурной интерпретации языка типа PROLOG, необходимо подчеркнуть следующее. На уровне любого языка типа PROLOG, т.е. на уровне абстрактной PROLOG --- машины, естественным образом реализуется эффективное распараллеливание процесса переработки сложных структур, организованное по принципу управления потоком запросов или управления потоком перерабатываемых сложноструктурированных данных. Управление потоком сложноструктурированных данных при этом основывается на использовании развитой формы ассоциативного доступа, a именно, доступа к произвольному фрагменту перерабатываемых данных (фрагменту, имеющему произвольный размер и произвольную структуру). Из вышесказанного следует, что создание машины, аппаратурно интерпретирующей язык типа PROLOG, есть не что иное, как создание параллельной машины, управляемой потоком сложноструктурированных данных и имеющей развитую ассоциативную память.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);
		[<p>принцип организации переработки информации непосредственно в памяти</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
			=> nrel_explanation: [<p>Этот принцип обеспечивает значительное ускорение переработки информации благодаря исключению этапов передачи информации из памяти в процессор и обратно, но оплачивается ценой большой избыточности функциональных (процессорных) средств, равномерно распределяемых по памяти. При распределении функциональных средств по структурно-перестраиваемой памяти каждая ячейка дополняется функциональным (процессорным) элементом, a перестраиваемые связи между ячейками становятся коммутируемыми каналами связи между функциональными элементами. Каждый функциональный элемент при этом имеет свою специальную внутреннюю регистровую память, отражающую важные для данного функционального элемента аспекты текущего состояния процесса выполнения элементарных операций внутреннего языка.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*)
	};
	=> .system_element_4689: {
		[<p>сочетание теории множеств, теории алгебраических систем, теории графов, математической логики, теории вычислений, методов машинного моделирования</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>теория наиболее общего вида структур данных (квази-графов), используемых в задачах искусственного интеллекта и являющихся обобщением классических алгебраических моделей</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>ориентированный на аппаратурную интерпретацию способ кодирования сложноструктурированных данных (квази-графв) в виде однородных семантических сетей специального вида</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>новый логический язык, являющийся модификацией классического и обеспечивающий описание квази-графов</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>графовые варианты логического языка описания квази-графов и, в частности, ориентированный на аппаратурную интерпретацию способ кодирования логических формул в виде однородных семантических сетей</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>непроцецурный язык программирования типа PROLOG, отличающийся удобством работы со сложными структурами данных (квази-графами) и развитостью средств управления вычислительным процессом</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>предлагаемый в качестве внутреннего аппаратурно интерпретируемого языка программирования способ записи непроцедурных программ в виде однородных семантических сетей</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>архитектура и принципы организации однородной ассоциативной параллельной структуры, ориентированной на переработку семантических сетей и обеспечивающей аппаратурную интерпретацию непроцецурного языка программирования типа PROLOG</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*)
	};
	=> .system_element_4690: [<p>Исследовать пути построения параллельных машин, управляемых потоком сложноструктурированных данных. В качестве памяти таких машин рассмотреть структурно-перестраиваемые запоминающие среды, обеспечивающие непосредственное хранение графовых структур и манипулирование ими, a также обеспечивающие ассоциативный доступ к произвольным фрагментам перерабатываемых графовых структур (фрагментам, имеющим произвольный вид и произвольный размер). Исследовать пути и принципы аппаратной интерпретации непроцецурных языков программирования типа PROLOG. B качестве интерпретируемого (внутреннего) языка исследовать язык программирования графового типа, являющийся способом записи программ в виде однородных семантических сетей.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> .system_element_2880: [<p>Разработка <i>машин, ориентированных на решение информационно-логических задач</i> позволит:
	<ul>
		<li> существенно расширить класс аппаратурно интерпретируемых (непосредственно перарабатываемых) структур данных;
		<li> обеспечить высокую скорость переработки сложноструктурированных данных, благодаря (1) укрупнению аппаратно реализуемых операций преобразования структур данных, (2) глубокому распараллеливанию процесса переработки сложных структур как на программном, так и на микропрограммном уровне, (3) организации переработки информации непосредственно в памяти;
		<li> существенно расширить логические возможности компьютеров благодаря использованию логического языка в качестве основы внутреннего языка программирования;
		<li> обеспечить достаточно высокую технологичность компьютеров рассматриваемого класса благодаря их организации как однородных структур.</li>
	<ul></p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;

	.system_element_4691
	=> nrel_note: [<p>На данном этапе работы были выявлены несколько основных вариантов вариантов архитектуры <i>ассоциативных семантических компьютеров</i>. В основу предлагаемого подхода к разработке <i>ассоциативного семантического компьютера</i> положены идеи, предложенные в работах В.В. Голенкова и получившие развитие в работе В.М. Кузьмицкого.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
		=> .system_element_1: 
			.system_element_4692;
			.system_element_4693
		;;
	*);
	=> .system_element_4694: [<p>При формализации предметных областей, имеющих достаточно сложную семантическую организацию, перерабатываемые данные естественным образом группируются в некоторые сложные структуры. Эффективность решения задач, связанных с переработкой сложноструктурированных данных, на многопроцессорных вычислительных системах значительно возрастает в том случае, когда структура связей между процессорными элементами вычислительной системы, решающей эту задачу, совпадает со структурой данных, перерабатываемых в ходе ее решения (или, в более общем случае --- отображается в структуру перерабатываемых данных простым и естественным образом). При переходе к переработке данных все более сложной структурной и семантической организации (а затем и к переработке знаний) сохранение высокой эффективности вычислительной системы обеспечивается главным образом путем увеличения числа одновременно работающих процессорных элементов и усложнения структуры связей между ними.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
		=> .system_element_1: .system_element_4693;;
		=> nrel_note: [<p>Такую тенденцию развития технических средств ЭВМ мы и рассмотрим в качестве основной линии эволюции, создающей предпосылки для появления <i>ассоциативных семантических компьютеров</i>. К ней относятся параллельные регулярные спецпроцессоры (векторные, матричные), спецвычислители для решения задач на графах и средства аппаратной поддержки семантических и нейронных сетей. К этой линии примыкают также и ассоциативные процессоры (в которых в роли процессорных элементов выступают ячейки ассоциативной памяти), процессоры баз данных и вычислительные системы, эффективно решающие те или иные классы задач за счет совпадения структуры связей между процессорными элементами со структурой информационного графа алгоритма (систолические вычислители, машины потоков данных).</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
			=> .system_element_1: .system_element_4693;;
		*);;
	*);;

	.system_element_4695
	=> nrel_note: [<p>Закономерным результатом развития вычислительных систем является переход к системам, изменяющим структуру связей между процессорными элементами в процессе функционирования. Такие системы настраивают свою внутреннюю структуру на структуру перерабатываемых данных и информационные графы алгоритмов решаемых задач и могут решать разные классы задач, сохраняя при этом высокую эффективность.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;

	.system_element_4696
	=> nrel_note: [<p>ЭВМ, ориентированная на переработку знаний, должна представлять собой в общем случае коллектив спецпроцессоров, ориентированных на максимально эффективное решение тех или иных классов задач.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> .system_element_4697: {
		[<p>Спецпроцессоры представляют собой многопроцессорную вычислительную систему.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
			=> nrel_note: [<p>В качестве семантического спецпроцессора можно предложить нелинейную (графовую) структурно перестраиваемую (динамическую) процессоро-память, аппаратно реализующую некоторый язык переработки семантических сетей, а саму ЭВМ такого рода можно, таким образом, назвать графодинамическим параллельным ассоциативным компьютером или <i>ассоциативным семантическим компьютером</i>.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);
		[<p>Структура связей между процессорными элементами спецпроцессоров совпадает со структурой данных или (реже) со структурой информационного графа алгоритма решения задачи.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Связи между процессорными элементами спецпроцессоров имеют перестраиваемую структуру.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Набор и функции спецпроцессоров определяются для каждой машины переработки знаний конкретно в зависимости от набора предметных областей, на которые эта машина ориентирована, и специфики задач, решаемых в этих областях.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Выявленный для некоторого семантического процессора набор механизмов переработки знаний должен быть "погружен" в язык представления и переработки знаний. При этом наиболее удобными для этой цели представляются языки семантических сетей.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Процессорные элементы соответствуют вершинам или фрагментам семантической сети.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Переработка информации сводится к изменению структуры связей между процессорными элементами, соответствующему изменению конфигурации семантической сети.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*)
	};;

	.system_element_4691
	=> .system_element_2130: {
		[<p>Нелинейная память --- каждый элементарный фрагмент хранимого в памяти текста может быть логически инцидентен неограниченному числу других элементарных фрагментов этого текста. Таким образом, ячейки памяти, в отличие от обычной памяти, связываются не фиксированными условными связями, задающими фиксированную последовательность (порядок) ячеек в памяти, a логически или даже физически (с использованием технических средств коммутации) проводимыми связями произвольной конфигурации. Эти связи соответствуют дугам, ребрам, гиперребрам записанного в памяти графа (sc-текста).</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Структурно-перестраиваемая (реконфигурируемая) память --- процесс отработки хранимой в памяти информации сводится не только к изменению состояния элементов, но и к реконфигурации связей между ними. То есть, в ходе переработки информации в структурно-перестраиваемой памяти меняются на только и даже не столько состояния ячеек памяти, как это имеет место в обычной памяти, сколько конфигурация связей между этими ячейками. Т.е. в структурно-перестраиваемой памяти в ходе переработки информации не только перераспределяются метки на вершинах записанного в памяти графа, но и меняется структура самого этого графа.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>В качестве внутреннего способа кодирования знаний, хранимых в памяти <i>ассоциативного семантического компьютера</i>, используется универсальный (!) способ нелинейного (графоподобного) смыслового представления знаний --- SC-код.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Обработка информации осуществляется коллективом агентов, работающих над общей памятью. Каждый из них реагирует на соответствующую ему ситуацию или событие в памяти (компьютер, управляемый хранимыми знаниями).</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Есть программно реализуемые агенты, поведение которых описывается хранимыми в памяти агентно-ориентированными программами, которые интерпретируются соответствующими коллективами агентов.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Есть базовые агенты, которые не могут быть реализованы программно (в частности, это агенты интерпретации агентных программ, базовые рецепторные агенты-датчики, базовые эффекторные агенты).</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Все агенты работают над общей памятью одновременно. Более того, если для какого-либо агента в некоторый момент времени в различных частях памяти возникает сразу несколько условий его применения, разные информационные процессы, соответствующие указанному агенту в разных частях памяти могут выполняться одновременно.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Для того, чтобы информационные процессы агентов, параллельно выполняемые в общей памяти не "мешали" друг другу, для каждого информационного процесса в памяти фиксируется и постоянно актуализируется его текущее состояние. То есть каждый информационный процесс сообщает всем остальным о своих намерениях и пожеланиях, которым остальные информационные процессы не должны препятствовать. Реализация такого подхода может выполняться, например, на основе механизма блокировок элементов семантической памяти.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
			=> .system_element_35: .system_element_4698;;
		*);
		[<p>Процессор и память <i>ассоциативного семантического компьютера</i> глубоко интегрированы и составляют единую процессоро-память. Процессор <i>ассоциативного семантического компьютера</i> равномерно "распределен" по его памяти так, что процессорные элементы одновременно являются и элементами памяти компьютера. То есть каждая ячейка дополняется функциональным (процессорным) элементом, a перестраиваемые связи между ячейками становятся коммутируемыми каналами связи между процессорными элементами. Каждый процессорный элемент при этом имеет свою специальную внутреннюю регистровую память, отражающую важные для данного процессорного элемента аспекты текущего состояния процесса выполнения элементарных операций языка микропрограмм, обеспечивающих интерпретацию языка более высокого уровня (Языка SCP).</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		[<p>Обработка информации в <i>ассоциативном семантическом компьютере</i> сводится к реконфигурации каналов связи между процессорными элементами, следовательно память такого компьютера есть не что иное, как <u>коммутатор</u> (!) указанных каналов связи. Таким образом, текущее состояние конфигурации этих каналов связи и есть текущее состояние обрабатываемой информации. Этот принцип обеспечивает значительное ускорение переработки информации благодаря исключению этапов передачи информации из памяти в процессор и обратно, но оплачивается ценой большой избыточности процессорных (функциональных) средств, равномерно распределяемых по памяти.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*)
	}
	(*
		=> .system_element_35: .system_element_4698;;
	*);;
*];
=> nrel_comment: [<p>Завершили "Сегмент. Общие принципы, лежащие в основе ассоциативных семантических компьютеров для ostis-систем"</p>];;

*];;