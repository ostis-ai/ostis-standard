.system_element_791
=> nrel_inclusion: [*
	=> nrel_idtf: [<p>Описание <i>SCs-кода</i></p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	<= .system_element_315: <
		.system_element_2592;
		.system_element_2593;
		.system_element_2594;
		.system_element_2595
	>;
	=> .system_element_418: 
		scg_code;
		.system_element_2545;
		.system_element_2546;
		.system_element_2547;
		.system_element_2548
	;
	=> .system_element_9: 
		scg_element;
		.system_element_1019;
		.system_element_2549;
		.system_element_2550;
		.system_element_2551;
		.system_element_2552
	;;

	scs_code
	=> nrel_idtf: [<p>Semantic Code string</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_idtf: [<p>Язык линейного представления знаний ostis-систем</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_idtf: [<p>Множество всевозможных текстов <i>SCs-кода</i></p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_idtf: [<p>Язык внешнего линейного представления конструкций внутреннего языка ostis-систем</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_idtf: [<p>Тексты <i>SCs-кода</i></p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
		<- .system_element_1946;;
	*);
	=> nrel_idtf: [<p>текст <i>SCs-кода</i></p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
		<- .system_element_2012;;
	*);
	=> nrel_idtf: [<p>sc.s-текст</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	<- .system_element_2596;
	=> .system_element_827: .system_element_2387;
	=> .system_element_829: scs_divider;
	=> .system_element_828: .system_element_1014;
	=> .system_element_831: scs_sentence;
	=> .system_element_2598: .system_element_2597;
	=> nrel_explanation: [<p>Множество линейных текстов (<i>sc.s-текстов</i>), каждый из которых состоит из предложений (<i>sc.s-предложений</i>), разделенных друг от друга двойной <i>точкой с запятой</i> (разделителем <i>sc.s-предложений</i>). При этом <b><i>sc.s-предложение</i></b> представляет собой последовательность <i>sc-идентификаторов</i>, являющихся именами описываемых <i>сущностей</i> и разделяемых между собой различными <i>sc.s-разделителями</i> и <i>sc.s-ограничителями</i></p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;

	.system_element_2597
	<=> nrel_pair_of_intersecting_sets: .system_element_2414;
	=> nrel_idtf: [<p>условное обозначение неименуемой (неидентифицируемой) сущности</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_inclusion: scs_divider_connector
	(*
		=> nrel_idtf: [<p>неоднозначное sc.s-изображение <i>sc-коннектора</i>, являющееся также одновременно одним из видов <i>sc.s-разделителей</i></p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;
		<= nrel_inclusion: scs_divider;;
	*);
	=> nrel_inclusion: .system_element_2599
	(*
		=> nrel_inclusion: .system_element_2600
		(*
			=> nrel_explanation: [<p>условное обозначение неименуемого множества sc-элементов в <i>SCs-коде</i> представляется строкой из двух символов --- <i>левой фигурной скобки</i> и <i>правой фигурной скобки</i>.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);;
		=> nrel_inclusion: .system_element_2601
		(*
			=> nrel_explanation: [<p>В <i>SCs-коде</i> такое обозначение представляется двух-символьной <i>строкой</i>, состоящей из <i>левой угловой скобки</i> и <i>правой угловой скобки</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);;
		=> nrel_inclusion: .system_element_2602
		(*
			=> nrel_explanation: [<p>В <i>SCs-коде</i> такое обозначение представляется двух-символьной <i>строкой</i>, состоящей из <i>левой квадратной скобки</i> и <i>правой квадратной скобки</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);;
		=> nrel_inclusion: .system_element_2603
		(*
			=> nrel_explanation: [<p>В <i>SCs-коде</i> такое обозначение представляется <i>строкой</i>, состоящей из <i>восклицательного знака</i>, <i>левой квадратной скобки</i>, <i>правой квадратной скобки</i> и еще одного <i>восклицательного знака</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);;
	*);;

	.system_element_2592
	=> nrel_inclusion: [*

		.system_element_2604
		=> nrel_idtf: [<p>Алфавит символов SCs-кода</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>множество символов SCs-кода</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>символ, используемый в текстах SCs-кода</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>Язык внешнего линейного представления информационных конструкций внутреннего языка ostis-систем</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		<= nrel_combination: {
			.system_element_2605;
			.system_element_2606;
			.system_element_2607
			(*
				<= nrel_combination: {
					.system_element_2464;
					.system_element_2608
				};;
			*);
			.system_element_2609
		};
		=> .system_element_423: 
			[<p>Алфавит SCs-кода строится на основе современных общепринятых наборов символов, что позволяет упростить разработку средств для работы с sc.s-текстами с использованием современных технологий.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>В состав sc.s-текстов, как и в состав текстов любых других языков, являющихся вариантами внешнего отображения текстов SC-кода, могут входить различные файлы, в том числе естественно-языковые или даже файлы, содержащие другие sc.s-тексты. В общем случае в таких файлах могут использоваться самые разные символы, в связи с чем будем считать, что в Алфавит SCs-кода эти символы не включаются.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*)
		;;

		.system_element_2605
		-> {
			.system_element_2610;
			.system_element_2611;
			.system_element_2612;
			.system_element_2613;
			.system_element_2614
		};
		=> nrel_inclusion: .system_element_2615
		(*
			-> {
				![<]!
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				![>]!
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				![|]!
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				![-]!
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*)
			};;
		*);
		=> nrel_inclusion: .system_element_2616
		(*
			=> nrel_inclusion: .system_element_2617
			(*
				=> nrel_idtf: [<p>Расширенный алфавит sc.s-коннекторов</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				-> {
					![∈]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					![∋]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					![∉]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					![/ ∋]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					![⊆]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					![⊇]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					![⊂]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					![⊃]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					![>=]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					![]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					![]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					![⇒]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					![⇔]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					![]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					![→]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					![]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*)
				};;
				=> nrel_inclusion: .system_element_2618
				(*
					=> nrel_idtf: [<p>Базовый алфавит sc.s-коннекторов</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					-> {
						![~]!
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);
						.system_element_2470;
						.system_element_2614;
						![>]!
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);
						![<]!
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);
						.system_element_2612;
						![-]!
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);
						![|]!
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);
						![/]!
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*)
					};;
				*);;
			*);;
			=> nrel_note: [<p>Как в Базовом, так и в Расширенном Алфавитах sc.s-коннекторов используются следующие общие признаки, характеризующие тип изображаемого sc-коннектора:
			<ul>
				<li> <i>знак подчеркивания</i> как признак изображений переменных sc-коннекторов (один <i>знак подчеркивания</i> для sc-коннекторов, являющихся первичными sc-переменными, два  <i>знака подчеркивания</i> для sc-коннекторов, являющихся вторичными sc-переменными (sc-метапеременными));
				<li> <i>вертикальная черта</i> (|) как признак изображений негативных sc-дуг принадлежности;
				<li> <i>косая черта</i> (/) как признак изображений нечетких sc-дуг принадлежности;
				<li> <i>тильда</i> (~) как признак изображений временных sc-дуг принадлежности</li>
			<ul>При необходимости комбинации указанных признаков перечисленные символы комбинируются так, как показано в сегменте <i>Описание sc.s-разделителей и sc.s-ограничителей</i>.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);;

		{
			.system_element_2617;
			.system_element_2618
		}
		=> nrel_explanation: [<p>Для упрощения процесса разработки исходных текстов баз знаний с использованием SCs-кода и создания соответствующих средств вводятся два алфавита символов. <i>Базовый алфавит символов, используемых в sc.s-коннекторах</i> включает только символы, входящие в переносимый набор символов (portable character set) и имеющиеся на стандартной современной клавиатуре. Таким образом, для разработки исходных текстов баз знаний, использующих только <i>Базовый алфавит символов, используемых в sc.s-коннекторах</i> достаточно обычного текстового редактора. <i>Расширенный алфавит символов, используемых в sc.s-коннекторах</i> включает также дополнительные символы, которые позволяют сделать sc.s-тексты (и sc.n-тексты) более читабельными и наглядными. Для визуализации и разработки sc.s-текстов с использованием расширенного алфавита требуется наличие специализированных средств.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> .system_element_785: {
			"file://Contents/part_kb/src/images/scs/sc.s-connectors/tableOfConctrs1.png"
			(*
				<- concept_file;;
				=> nrel_format: format_png;;
				=> nrel_idtf: [<p>Описание изображения sc.s-коннекторов в Базовом и Расширенном алфавите SCg-кода</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			"file://Contents/part_kb/src/images/scs/sc.s-connectors/tableOfConctrs2.png"
			(*
				<- concept_file;;
				=> nrel_format: format_png;;
				=> nrel_idtf: [<p>Описание изображения sc.s-коннекторов в Базовом и Расширенном алфавите SCg-кода (Продолжение)</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*)
		};;

		.system_element_2606
		-> {
			![(]!
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			![)]!
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			![\*]!
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*)
		};;

		.system_element_2609
		-> {
			![{]!
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			![}]!
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			![-]!
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			![!]!
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			![\[]!
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			![\]]!
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*)
		};;
	*];;

	.system_element_2593
	=> nrel_inclusion: [*

		scs_divider
		=> nrel_idtf: [<p>разделитель, используемый в sc.s-текстах</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_subdividing: {
			.system_element_2619
			(*
				=> nrel_inclusion: scs_divider_connector;;
				=> nrel_inclusion: .system_element_2620;;
				=> nrel_inclusion: .system_element_2612
				(*
					<=> nrel_semantic_equivalence: ![:]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_note: [<p>Разделяет sc-идентификатор бинарного отношения и второй компонент одной из связок этого отношения в случае, если указанное бинарное отношение и его связка связаны <u>константной</u> sc-дугой принадлежности.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);;
				=> nrel_inclusion: .system_element_2621
				(*
					<=> nrel_semantic_equivalence: ![::]!
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_note: [<p>Разделяет sc-идентификатор бинарного отношения и второй компонент одной из связок этого отношения в случае, если указанное бинарное отношение и его связка связаны <u>переменной</u> sc-дугой принадлежности.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);;
			*);
			.system_element_2622
			(*
				<=> nrel_semantic_equivalence: ![;;]!
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_idtf: [<p>двойная точка с запятой</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*)
		};;

		.system_element_1014
		=> nrel_inclusion: .system_element_2623
		(*
			<=> [<p>(!\[ (* \]! ⋃ !\[ *) \]!)</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
			=> nrel_explanation: [<p>Круглые скобки со звездочкой ограничивают присоединенные sc.s-предложения, которые, в свою очередь, могут иметь в своем составе другие присоединенные sc.s-предложения.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);;

		scs_divider_connector
		=> nrel_idtf: [<p>изображение <i>sc-коннектора</i> во внешнем тексте SCs-кода или SCn-кода</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		<= nrel_inclusion: scs_divider;
		=> nrel_note: [<p>типология sc.s-коннекторов полностью соответствует типологии sc.g-коннекторов, и, тем более, <b>sc-коннекторов</b>, т.к. она учитывает устоявшиеся традиции изображения связок целого ряда конкретных отношений</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_subdividing: {
			.system_element_2624;
			.system_element_2625
		};
		=> nrel_subdividing: {
			.system_element_2626;
			.system_element_2627
		};;

		.system_element_2620
		=> nrel_subdividing: {
			.system_element_2628
			(*
				=> nrel_idtf: [<p>знак инцидентности sc-коннектора, sc-идентификатор которого находится справа</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				<=> nrel_semantic_equivalence: ![|-]!
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			.system_element_2629
			(*
				=> nrel_idtf: [<p>знак инцидентности sc-коннектора, sc-идентификатор которого находится слева</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				<=> nrel_semantic_equivalence: ![-|]!
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			.system_element_2630
			(*
				=> nrel_idtf: [<p>знак инцидентности sc-дуги, sc-идентификатор который находится справа</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				<=> nrel_semantic_equivalence: ![|<]!
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			.system_element_2631
			(*
				=> nrel_idtf: [<p>знак инцидентности sc-дуги, sc-идентификатор который находится слева</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				<=> nrel_semantic_equivalence: ![>|]!
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*)
		};
		=> nrel_explanation: [<p>На множестве sc-элементов задано бинарное ориентированное отношение инцидентности sc-элементов, а так же подмножество этого отношения --- отношение инцидентности входящих sc-дуг, каждая пара которого связывает sc-дугу с тем sc-элементом, в который она входит.В SC-коде sc-коннекторы могут соединять между собой не только sc-узел с sc-узлами, но и sc-узел с sc-коннектором и даже sc-коннектор с sc-коннектором. В последнем случае, указывая инцидентность sc-коннекторов, необходимо уточнить, какой из них является соединяемым (связываемым), а какой-соединяющим (связующим). Поэтому отношение инцидентности, заданное на множестве sc-элементов является ориентированным. Первый компонент пары этого отношения --- связующий sc-коннектор, а второй --- связуемый sc-элемент. Очевидно, что связующий sc-элемент всегда является sc-коннектором, а sc-узел может быть только связуемым.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_note: [<p>указанные sc.s-разделители с точки зрения синтаксической структуры sc.s-предложений аналогичны <b>sc.s-коннекторам</b>, но с точки зрения их денотационной семантики в отличие от sc.s-коннекторов они не являются изображениями соответствующих sc-коннекторов</p>];
		=> nrel_inclusion: .intro_scs_connectors;
		=> nrel_inclusion: .intro_scs_connectors_transf
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_2614
		<=> nrel_semantic_equivalence: ![=]!
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>связь синонимии между sc-идентификаторами, по крайней мере один из которого является sc-выражением</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_note: [<p>знак равенства является <i>sc.s-разделителем</i> двух <i>sc-идентификаторов</i>, которые идентифицируют (именуют) одну и ту же <i>сущность</i> и, соответственно, являются <i>sc-идентификаторами</i>* (внешними уникальными изображениями) одного и того же <i>sc-элемента</i>. При этом из указанных двух sc-идентификаторов чаще всего один является простым sc-идентификатором, а второй --- sc-выражением. Реже оба эти sc-идентификатора являются sc-выражениями. И совсем редко оба они являются простыми sc-идентификаторами. Последнее обозначает то, что оба эти sc-идентификатора являются основными <i>sc-идентификаторами</i>* одного и того же <i>sc-элемента</i>.Пример: <i>SC-код</i> = <i>sc.s-текст</i>;;Здесь первый <i>sc-идентификатор</i> является <i>именем собственным</i>, а второй --- <i>именем нарицательным</i>.При трансляции <i>sc.s-текста</i> в <i>SC-код</i> знаку равенства на некотором этапе может быть поставлено в соответствие <i>sc-ребро</i>, принадлежащее отношению <i>синонимии</i>* <i>sc-элементов</i>, идентифицируемых <i>sc-идентификаторами</i>, связанными знаком равенства. Но на последующем этапе указанное <i>sc-ребро</i> <u>удаляется</u>, а связанные им <i>sc-элементы</i> <u>склеиваются</u>. Таким образом <i>sc-ребро</i>, принадлежащее отношению <i>синонимии</i>* sc-элементов, имеет не только денотационную, но и операционную семантику.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_2632
		<=> [<p>(!\[ ⊇ \]! ⋃ !\[ ⊆ \]!)</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>изображение <i>sc-дуги</i>, принадлежащей отношению <i>погружения</i>*, связывающей два <i>sc-узла</i>, обозначающих <i>sc-тексты</i>, первый из которых является погружающим, а второй (в который указанная <i>sc-дуга</i> входит) является погружаемым, вводимым в состав первого <i>sc-текста</i></p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_note: [<p><i>sc-дуга</i>, принадлежащая отношению <i>погружения</i>*, интерпретируется как команда погружения одного <i>sc-текста</i> в состав другого. При выполнении этой команды (1) все <i>sc-элементы</i> погружаемого <i>sc-текста</i> становятся элементами, принадлежащими погружающему <i>sc-тексту</i>, (2) все синонимичные <i>sc-элементы</i>, оказавшиеся в составе погружающего <i>sc-текста</i>, склеиваются, (3) <i>sc-узел</i>, обозначающий погружаемый <i>sc-текст</i>, а так же спецификация этого <i>sc-текста</i> (включая перечень всех его <i>sc-элементов</i>) погружается в историю эволюции <i>базы знаний</i> вместе со спецификацией события погружения рассматриваемого <i>sc-текста</i> в состав <i>базы знаний</i>.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_2633
		=> nrel_note: [<p>указанные sc.s-коннекторы отличаются от остальных sc.s-коннекторов тем, что они и соответствующие им sc-коннекторы (sc-ребра, принадлежащих отношению синонимии sc-элементов и sc-дуги, принадлежащие отношению погружения одного sc-текста в состав другого) имеют не только денотационную, но и операционную семантику, т.к. являются командами склеивания и командами погружения.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_2626
		=> .system_element_2635: .system_element_2634
		(*
			=> .system_element_203: "file://Contents/part_kb/src/images/scs/sc.s-connectors/scs_membership_connectors.pdf"
			(*
				<- concept_file;;
				=> nrel_format: format_pdf;;
			*);;
		*);;

		.system_element_2627
		=> .system_element_2635: .system_element_2636
		(*
			=> .system_element_203: "file://Contents/part_kb/src/images/scs/sc.s-connectors/scs_non_membership_connectors_1.png"
			(*
				<- concept_file;;
				=> nrel_format: format_png;;
			*);;
			=> .system_element_203: "file://Contents/part_kb/src/images/scs/sc.s-connectors/scs_non_membership_connectors_2.png"
			(*
				<- concept_file;;
				=> nrel_format: format_png;;
			*);;
		*);;
	*];;

	.system_element_2594
	=> nrel_inclusion: [*

		scs_sentence
		=> nrel_idtf: [<p>минимальный семантически целостный фрагмент sc.s-текста</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>минимальный sc.s-текст</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		<= nrel_inclusion: .system_element_811;
		=> nrel_inclusion: scs_sentence_simple
		(*
			=> nrel_idtf: [<p>минимальное sc.s-предложение</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
			=> nrel_explanation: [<p><i>sc.s-предложение</i>, (1) <u>состоящее</u> или из двух <i>sc-идентификаторов</i>, соединенных между собой <i><b>sc.s-коннектором</b></i>, или из трех <i>sc-идентификаторов</i>, разделенных <i>sc.s-разделителями, изображающими связь инцидентности sc-элементов</i>, и (2) завершающееся <i>двойной точкой с запятой</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
			=> nrel_note: [<p>Нетрудно заметить, что простые sc.s-предложения по сути аналогичны триплетам языка RDF (RDF-триплетам), за тем исключением, что <i>простое sc.s-предложение</i> можно развернуть при помощи <i>Операции конверсии sc.s-предложений*</i> не меняя при этом его смысл, а RDF-триплет нельзя. Это является одной из причин, по которой, в отличие от RDF-триплетов, в простых sc.s-предложениях <i>sc.s-коннекторы</i> и <i>sc.s-разделители</i>, изображающие связь инцидентности <i>sc-элементов</i> не могут быть опущены, поскольку они в том числе показывают направление изображаемой ими связи между sc-элементами.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
			=> .system_element_203: 
				[<p><i>многоугольник</i> ⊃ <i>треугольник</i></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
					<=> nrel_semantic_equivalence: "file://Contents/part_kb/src/images/scs/inclusion.png"
					(*
						<- concept_file;;
						=> nrel_format: format_png;;
					*);;
				*);
				[<p><i>сторона*</i> ∋ (<i>Четырехугк(ТчкА;ТчкВ;ТчкС;ТчкD)</i> ⇒ <i>Отр(ТчкВ;ТчкС)</i>);;</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
					<=> nrel_semantic_equivalence: "file://Contents/part_kb/src/images/scs/side.png"
					(*
						<- concept_file;;
						=> nrel_format: format_png;;
					*);;
				*);
				[<p><i>Si</i> |- <i>ai</i> >| <i>ei</i></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
					<=> nrel_semantic_equivalence: "file://Contents/part_kb/src/images/scs/inclusion_incident.png"
					(*
						<- concept_file;;
						=> nrel_format: format_png;;
					*);;
				*)
			;;
		*);
		=> nrel_note: [<p>Признаком завершения любого <i>sc.s-предложения</i>, т.е. последними его символами является <i>двойная точка с запятой</i>, которую, следовательно, можно считать разделителем <i>sc.s-предложений</i>.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> .system_element_2390: 
			.system_element_2637
			(*
				<= nrel_inclusion: .system_element_1762;;
				=> nrel_explanation: [<p>Каждое <i>sc.s-предложение</i> (в том числе, и <i>простое sc.s-предложение</i>) можно преобразовать в семантически эквивалентное ему <i>sc.s-предложение</i> путем конверсии (разворота) цепочки компонентов <i>sc.s-предложения</i>. Так, например, при конверсии (развороте) простого <i><b>sc.s-предложения</b></i> (1) первый его <i><b>sc-идентификатор</b></i> (первый компонент этого <i><b>sc.s-предложения</b></i>) становится третьим компонентом конвертированного<i>sc.s-предложения</i>, (2) второй его <i><b>sc-идентификатор</b></i> (третий компонент исходного <i><b>sc.s-предложения</b></i>) становится первым компонентом конвертированного <i><b>sc.s-предложения</b></i> и (3) второй компонент исходного <i><b>sc.s-предложения</b></i> (<i><b>sc.s-коннектор</b></i> или <i><b>sc.s-разделитель</b>, изображающий связь инцидентности <b>sc-элементов</b></i>, соединяющий указанные выше компоненты) остается вторым компонентом конвертированного <i><b>sc.s-предложения</b></i>, но меняет направленность (∋ заменяется на ∈ и наоборот, ⊃ на ⊂ и наоборот, ⇒ на  и наоборот и т.д.)</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_note: [<p>Можно говорить не только о конверсии sc.s-предложения, но и о конверсии sc.s-коннектора, о конверсии sc.s-разделителя, изображающего связь инцидентности sc.s-элементов.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> .system_element_2638: [<p><i>треугольник ∋ Треуг(ТчкВ;ТчкС;ТчкD)</i>;;</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> .system_element_2639: [<p><i>Треуг(ТчкВ;ТчкС;ТчкD) ∈ треугольник</i>;;</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
					<=> nrel_semantic_equivalence: "file://Contents/part_kb/src/images/scs/conversion.png"
					(*
						<- concept_file;;
						=> nrel_format: format_png;;
					*);;
				*);;
			*);
			.system_element_2640
			(*
				<= nrel_inclusion: .system_element_1762;;
				=> nrel_idtf: [<p>операция соединения двух sc.s-предложений при совпадении последнего компонента первого предложения с первым компонентом второго*</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_explanation: [<p>В результате выполнения данной операции:
				<ul>
					<li> первый компонент второго sc.s-предложения удаляется;
					<li> оставшаяся часть второго предложения окружается sc.s-ограничителем присоединенных предложений ((* и *)). Разделитель sc.s-предложений (;;) также попадает внутрь указанного ограничителя;
					<li> полученная конструкция помещается между последним компонентом первого предложения и разделителем sc.s-предложений, которым заканчивалось первое предложение;
					<li> второе предложение, таким образом, становится присоединенным sc.s-предложением.</li>
				<ul>Аналогичным образом к любому присоединенному sc.s-предложению могут пристыковываться другие присоединенные sc.s-предложения, в общем случае уровень такой вложенности не ограничен.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			.system_element_2641
			(*
				<= nrel_inclusion: .system_element_1762;;
				=> nrel_idtf: [<p>операция присоединения простого sc.s-предложения к sc.s-предложению, у которого последний sc.s-коннектор совпадает с sc.s-коннектором простого sc.s-предложения, а предшествующий указанному sc.s-коннектору sc-идентификатор совпадает с первым sc-идентификатором простого sc.s-предложения*</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_explanation: [<p>В результате выполнения этой операции совпадающие sc-идентификаторы и sc.s-коннекторы соединяемых sc.s-предложений склеиваются , а последние sc-иден-ти-фи-ка-то-ры соединяемых <i>sc.s-предложений</i> становятся последними компонентами объединенного <i>sc.s-предложения</i>,разделенными <i>точкой с запятой</i>. Аналогичным образом можно присоединять сколько угодно простых <i>sc.s-предложений</i>.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			.system_element_2642
			(*
				<= nrel_inclusion: .system_element_1762;;
				=> nrel_explanation: [<p>Каждое <i>sc.s-предложение</i> можно разложить на множество <i>простых sc.s-предложений</i>, т.е. представить в виде последовательности <i>простых sc.s-предложений</i>.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			.system_element_2643
			(*
				<= nrel_inclusion: .system_element_1762;;
				=> nrel_explanation: [<p>Каждое <i>sc.s-предложение</i> (в том числе и <i>простое sc.s-предложение</i> с <i>sc.s-коннектором</i>) можно представить в виде семантически эквивалентной последовательности <i>простых <b>sc.s-предложений</b></i> с <i>sc.s-разделителем, изображающим связь инцидентности <b>sc-элементов</b></i>.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_note: [<p>Данная операция осуществляет <u>однозначное</u> (!) формирование множества <i>простых <b>sc.s-предложений</b></i> указанного вида.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*)
		;;

		scs_sentence
		=> nrel_note: [<p>Операции, заданные на множестве <i>sc.s-предложений</i> можно разделить на три группы:

		<ul>

			<li> группа операций конверсии <i>sc.s-предложений</i>, состоящая из одной операции;

			<li> группа операций соединения <i>sc.s-предложений</i>;

			<li> группа операций декомпозиции <i>sc.s-предложений</i> и, в частности, операций разложения <i>sc.s-предложений</i>.</li>

		<ul>Очевидно, что операции соединения <i>sc.s-предложений</i> и операции декомпозиции <i>sc.s-предложений</i> являются обратными друг другу операциями.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_2644
		=> nrel_inclusion: [*

			[<p><i>треугольник ∋ Треугк(ТчкВ;ТчкС;ТчкD)</i>;;</p>]
			=> .system_element_2637: [<p><i>Треугк(ТчкВ;ТчкС;ТчкD) ∈ треугольник</i>;;</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				<=> nrel_semantic_equivalence: "file://Contents/part_kb/src/images/scs/conversion.png"
				(*
					<- concept_file;;
					=> nrel_format: format_png;;
				*);;
			*);;

			[<p><i>треугольник ∋ Треугк(ТчкВ;ТчкС;ТчкD);;
Треугк(ТчкВ;ТчкС;ТчкD) ⇒ сторона*:включение*: Отр(ТчкВ;ТчкC);;</i></p>]
			=> .system_element_2640: [<p><i>треугольник ∋ Треугк(ТчкВ;ТчкС;ТчкD) (* ⇒ сторона*:включение*:Отр(ТчкВ;ТчкС);;*)</i>;;</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				<=> nrel_semantic_equivalence: "file://Contents/part_kb/src/images/scs/joining_sentences.png"
				(*
					<- concept_file;;
					=> nrel_format: format_png;;
				*);;
			*);;

			[<p><i>сторона* ∋ (Треугк(ТчкВ;Тчк С;ТчкD) ⇒ Отр(ТчкВ;ТчкС));;
сторона* ∋ (Треугк(ТчкВ;Тчк С;ТчкD) ⇒ Отр(ТчкC;ТчкD));;</i></p>]
			=> .system_element_2641: [<p><i>сторона* ∋ ((Треугк(ТчкВ;ТчкС;ТчкD) ⇒ Отр(ТчкВ;ТчкС));(Треуг(ТчкВ;ТчкС;ТчкD) ⇒ Отр(ТчкC;ТчкD)));;</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				=> .system_element_1762: [<p><i>Треугк(ТчкВ;ТчкС;ТчкD)</i>⇒<i>сторона*</i>: <i>Отр(ТчкВ;ТчкС)</i>;<i>Отр(ТчкС;ТчкD)</i>;;</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				<=> nrel_semantic_equivalence: "file://Contents/part_kb/src/images/scs/joining_sentence.png"
				(*
					<- concept_file;;
					=> nrel_format: format_png;;
				*);;
			*);;

			[<p><i>Треугк(ТчкВ;ТчкС;ТчкD) ⇒ сторона*:включение*:Отр(ТчкВ;ТчкС);;</i></p>]
			=> .system_element_2642: [<p><i>сторона* ∋ (Треугк(ТчкВ;ТчкС;ТчкD) ⇒ Отр(ТчкВ;ТчкС));;
 включение* ∋ (Треугк(ТчкВ;ТчкС;ТчкD) ⇒ Отр(ТчкВ;ТчкС));;</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				<=> nrel_semantic_equivalence: "file://Contents/part_kb/src/images/scs/dividing_sentences.png"
				(*
					<- concept_file;;
					=> nrel_format: format_png;;
				*);;
			*);;

			[<p><i>треугольник ∋ Треугк(ТчкВ;ТчкC;ТчкD)</i></p>]
			=> .system_element_2643: [<p><i>треугольник |- ai >| Треугк(ТчкВ;ТчкС;ТчкD);;
константный постоянный sc-узел, обозначающий класс ∋ треугольник;;
константная постоянная позитивная sc-дуга принадлежности ∋ ai;;
константный постоянный sc-узел общего вида ∋ Треугк(ТчкВ;ТчкC;ТчкD);;</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				<=> nrel_semantic_equivalence: "file://Contents/part_kb/src/images/scs/dividing_sentences_incident.png"
				(*
					<- concept_file;;
					=> nrel_format: format_png;;
				*);;
			*);;

			.system_element_2645
			=> nrel_idtf: [<p>встроенное sc.s-предложение</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_explanation: [<p>Присоединенные sc.s-предложения используются для того, чтобы продолжить спецификацию какого-либо sc-элемента, sc-идентификатор которого является последним компонентом в рамках какого-либо sc.s-предложения, не начиная при этом нового sc.s-предложения и, таким образом, не дублируя указанный <b>sc-идентификатор</b>. Внутрь присоединенных sc.s-предложений также могут встраиваться другие присоединенные sc.s-предложения, в общем случае уровень вложенности таких предложений не ограничен. Таким образом присоединенные sc.s-предложения описывают ветвление sc.s-предложений, при этом точками такого ветвления выступают sc-идентификаторы, входящие в состав этих sc.s-предложений.Благодаря введению присоединенных sc.s-предложений появляется возможность любой sc-текст изобразить в виде одного sc.s-предложения, содержащего необходимое количество присоединенных sc.s-предложений. Таким образом, SCs-код по выразительной мощности становится эквивалентным SCn-коду.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;

			scs_sentence
			=> .system_element_1004: [<p>С семантической точки зрения <i>sc.s-предложение</i> представляет собой описание некоторого <u>маршрута</u> в соответствующем sc-тексте, который является графовой структурой специального вида и структура которого описывается (изображается) с помощью <i>sc.s-предложений</i>. Указанный маршрут проводится по sc-коннекторам и по связям инцидентности sc-элементов, если маршрут проходит через инцидентные sc-коннекторы. В описании указанного маршрута могут дополнительно указываться множества (чаще всего отношения), которым принадлежат sc-коннекторы, входящие в описываемый маршрут. Кроме того, указанный маршрут в начале и/или в конце может иметь разветвления, когда какой-либо sc-элемент <u>одинаково</u> инцидентен нескольким <u>однотипным</u> sc-коннекторам, соединяющим указанный sc-элемент с некоторыми другими sc-элементами.Таким образом каждое указанное разветвление состоит из неограниченного числа ветвей, каждая из которых состоит из одного sc-коннектора и одного связываемого им sc-элемента.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;

			.system_element_2646
			=> nrel_explanation: [<p>Каждое <i>sc.s-предложение</i> представляет собой последовательность (1) <i>sc-идентификаторов</i>, <b>(2) <i>sc.s-коннекторов</i></b> или <i>sc.s-разделителей</i>, изображающих связь инцидентности <i>sc-элементов</i>, (3) <i>точек с запятыми</i>, (4) <i>ограничителей присоединенных sc.s-предложений</i>, завершаемая <i>двойной точкой с запятой</i>. При этом непосредственно соседствовать друг с другом не могут ни <i><b>sc-идентификаторы</b></i>, ни <i><b>sc.s-коннекторы</b></i>, ни, очевидно, <i>точки с запятыми</i> и <i>ограничители присоединенных sc.s-предложений</i>.Между <i>sc-идентификаторами</i> в рамках <i>sc.s-предложения</i> может находиться либо <i>точка с запятой</i>, либо <i>sc.s-коннектор</i>, либо <i>sc.s-разделитель</i>, изображающий связь инцидентности <i>sc-элементов</i>. Слева и справа от <i>sc.s-коннектора</i> и от <i>sc.s-разделителя</i>, изображающего связь инцидентности <i>sc-элементов</i>, должны находиться <i>sc-идентификаторы</i>.Указанные <i>sc-идентификаторы</i>, <i>sc.s-коннекторы</i> и <i>sc.s-разделители</i>, изображающие связь инцидентности <i>sc-элементов</i>, считаются компонентами соответствующего <i>sc.s-предложения</i>. Понятие быть компонентом sc.s-предложения является относительным понятием (отношением), т.к. в состав некоторых компонентов <i>sc.s-предложения</i> (в состав <i>sc-идентификаторов</i>, являющихся <i>sc.s-выражениями</i>, ограничиваемыми фигурными или квадратными скобками) могут входить других <i>sc.s-предложения</i>, состоящие из своих компонентов.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_first_domain: scs_sentence;
			=> nrel_second_domain: .system_element_2647;;

			.system_element_2648
			<= nrel_inclusion: .system_element_2646;
			=> nrel_explanation: [<p>Это дополнительный вид компонентов <i>sc.s-предложений</i>. Каждый <i>sc.s-модификатор</i>, являющийся компонентом некоторого <i>sc.s-предложения</i>, представляет собой <i>sc-идентификатор</i>, обозначающий множество (чаще всего, отношение), которому принадлежит sc-коннектор, изображенный <i>sc.s-коннектором</i>, который предшествует указанному <i>sc-идентификатору</i>. Признаком <i>sc.s-модификатора</i> является <i>двоеточие</i> (или <i>двойное двоеточие</i>), которое ставится после <i>sc.s-модификатора</i> и отделяет его либо от следующего за ним другого <i>sc.s-модификатора</i> для этого же <i>sc.s-коннектора</i>, либо от следующего за ним <i>sc-идентификатора</i>, соответствующего sc-элементу, который инцидентен sc-коннектору, изображенному <i>sc.s-коннектором</i>, находящимся левее рассматриваемого <i>sc-идентификатора</i> после одного или нескольких <i>sc.s-модификаторов</i>. Обычное (одинарное) <i>двоеточие</i> обозначает, что sc-элемент, изображенный соответствующим <b>sc.s-модификатором</b>, связан с sc-коннектором, изображенным левее этого <b>sc.s-модификатора</b>, <i>базовой <b>sc-дугой</b></i> (<i>константной постоянной позитивной <b>sc-дугой</b> принадлежности</i>), <i>двойное двоеточие</i> обозначает, что указанные элементы связаны <i>переменной постоянной позитивной <b>sc-дугой</b> принадлежности</i>.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> .system_element_203: 
				[<p><i>Четырехугк(ТчкА;ТчкВ;ТчкС;ТчкD)</i> ⇒ <i>сторона*</i> : <i>включение*</i> : <i>Отр(ТчкВ;ТчкС)</i>;;</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
					<=> nrel_semantic_equivalence: "file://Contents/part_kb/src/images/scs/modifier.png"
					(*
						<- concept_file;;
						=> nrel_format: format_png;;
					*);;
				*);
				[<p><i>Треугк(ТчкА;ТчкВ;ТчкС)</i> _⇒ <i>сторона*</i> :: <i>_s</i>;;</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
					<=> nrel_semantic_equivalence: "file://Contents/part_kb/src/images/scs/modifier_var.png"
					(*
						<- concept_file;;
						=> nrel_format: format_png;;
					*);;
				*)
			;;

			.system_element_811
			=> nrel_idtf: [<p>конкатенация <i>sc.s-предложений</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>последовательность <i>sc.s-предложений</i>, разделяемых <i>двойными точками с запятой</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_inclusion: .system_element_2649
			(*
				=> nrel_idtf: [<p>конкатенция <i>sc.s-предложений</i>, слева и справа от которой отсутствуют какие-либо символы SCs-кода</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			=> nrel_inclusion: .system_element_2650
			(*
				=> nrel_idtf: [<p>конкатенция всех <i>sc.s-предложений</i>, входящих в состав <i>sc.s-выражения структуры</i></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_inclusion: .system_element_2651
				(*
					=> nrel_idtf: [<p>часть цепочки <i>sc.s-предложений</i>, входящих в состав максимального sc.s-текста, включенного в структуру</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_inclusion: .system_element_2652;;
				*);;
			*);
			=> nrel_note: [<p><i>sc.s-предложение</i> является минимальным sc.s-текстом.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> .system_element_2653: [<p>Смысл sc.s-текста, а также <i>sc.s-текста, включенного в структуру</i>, не зависит от порядка <i>sc.s-предложений</i> в этих sc-текстах. Т.е. перестановка <i>sc.s-предложений</i> в рамках таких <i>sc.s-текстов</i> смысла этих <b>sc.s-текстов</b> не меняет (т.е. приводит к семантически эквивалентным <i>sc.s-текстам</i>), но сильно влияет на трудоемкость человеческого восприятия (на читабельность) этих текстов.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> .system_element_203: [<p><i>материальный объект</i> ∋ <i>Земля</i> (* => <i>вращаться вокруг</i>*: <i>спутник</i>*: <i>Луна</i>;;*);;<i>материальный объект</i> ∋ <i>Луна</i>(* => <i>основной идентификатор</i>*: \[ Moon \] (* <- <i>Английский язык</i>;; *); \[ Луна \] (* <- <i>Русский язык</i>;; *);; *);; <i>материальный объект</i> ∋ <i>Солнце</i> (* => <i>вращаться вокруг</i>*: <i>Земля</i>; <i>Марс</i>;; *);;<i>материальный объект</i> ∋ <i>Марс</i>;;</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				=> nrel_semantic_equivalence: "file://Contents/part_kb/src/images/scs/scs_text_example.png"
				(*
					<- concept_file;;
					=> nrel_format: format_png;;
				*);;
			*);;
		*];;

		.system_element_2595
		=> nrel_inclusion: [*

			.system_element_2654
			=> nrel_idtf: [<p>Подъязык SCs-кода, который использует минимальный набор синтаксических средств, но при этом имеет семантическую мощность, эквивалентную мощности SCs-кода в целом</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> .system_element_2130: [<p>В Ядре SCs-кода:
			<ul>
				<li> используются только <i>простые sc-идентификаторы</i>, в том числе <i>sc-идентификаторы внешних файлов ostis-систем</i> (sc-выражения не используются);
				<li> используются только <i>sc.s-разделители, изображающие связь инцидентности sc-элементов</i>, а также sc.s-коннектор, изображающий константную  постоянную позитивную пару принадлежности (∈ и ∋ в Расширенном алфавите и "->" и "<-" в Базовом алфавите). Другие <i>sc.s-коннекторы</i> не используются;
				<li> не используются <i>sc.s-модификаторы</i> и, соответственно, двоеточия, являющиеся признаком завершения <i>sc.s-модификаторов</i>;
				<li> используются только <i>простые sc.s-предложения</i>, которые, как следует из вышеуказанных свойств Ядра SCs-кода, либо состоят из двух <i>простых sc-идентификаторов</i>, соединяемых sc.s-коннектором, изображающим константную  постоянную позитивную пару принадлежности, либо трех <i>простых sc-идентификаторов</i>, разделенных <i>sc.s-разделителями, изображающими связь инцидентности sc-элементов</i>.</li>
			<ul>Из перечисленных свойств Ядра SCs-кода следует, что для представления (изображения) любого <b>sc-текста</b> средствами Ядра SCs-кода необходимо для <u>всех</u> (!) sc-элементов этого <b>sc-текста</b> (кроме константных постоянных позитивных пар принадлежности) построить соответствующие им простые <i>sc-идентификаторы</i>, т.е. необходимо проименовать все указанные sc-элементы. В свою очередь, тип каждого используемого <b>sc-элемента</b> (кроме константных постоянных позитивных пар принадлежности) задается явно путем указания принадлежности этих элементов соответствующим классам sc-элементов, в том числе классам, входящим в Ядро SC-кода.Как видно из приведенного описания, Ядро SCs-кода соответствует Ядру SCg-кода, за исключением того, что в Ядре SCg-кода нет необходимости именовать все изображаемые sc-элементы, а также в Ядре SCg-кода присутствуют графические изображения для sc-элементов, принадлежащих соответствующим классам Ядра SC-кода и эту принадлежность нет необходимости указывать явно.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_note: [<p>Очевидно, что широко практически применять Ядро SCs-кода для записи больших фрагментов баз знаний неудобно и неэффективно. Тем не менее, с практической точки зрения Ядро SCs-кода может использоваться, например, для обмена информацией со сторонними средствами представления графовых конструкций, рассчитанными на представление информации в виде триплетов (например, RDF-хранилищ). Для обеспечения возможности более широкого практического использования необходимы синтаксические расширения Ядра SCs-кода в целях:
			<ul>
				<li> минимизации числа идентифицируемых (именуемых) sc-элементов путем использования <i>sc-выражений</i> и ликвидации необходимости идентифицировать (именовать) <u>все</u> (!) sc-элементы;
				<li> сокращения текста путем минимизации числа повторений одного и того же <i>sc-идентификатора</i> путем соединения <i>sc.s-предложений</i>;
				<li> повышение уровня наглядности, читабельности sc.s-текстов.</li>
			<ul></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			-> rrel_example: [<p><i>треугольник |- ai >| Треугк(ТчкВ;ТчкС;ТчкD);;Треугк(ТчкВ;ТчкС;ТчкD) |- bi >| Отр(ТчкВ;ТчкС);;сторона* |- сi >| bi;;константный постоянный sc-узел, обозначающий класс ∋ треугольник;;константный постоянный sc-узел, обозначающий отношение ∋ сторона*;;константная постоянная позитивная sc-дуга принадлежности ∋ ai;;константная постоянная sc-дуга ∋ bi;;константная постоянная позитивная sc-дуга принадлежности ∋ ci;;константный постоянный sc-узел общего вида ∋ Отр(ТчкВ;ТчкС);;константный постоянный sc-узел общего вида ∋ Треугк(ТчкВ;ТчкC;ТчкD);;</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
				<=> nrel_semantic_equivalence: "file://Contents/part_kb/src/images/scs/kernel_incident.png"
				(*
					<- concept_file;;
					=> nrel_format: format_png;;
				*);;
			*);;

			.system_element_2655
			=> nrel_idtf: [<p>Первое направление расширения Ядра SCs-кода <u>и всех иных его расширений</u></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> .system_element_423: [<p>По сравнению с <i>Ядром SCs-кода</i> в <i>Первом направлении расширения Ядра SCs-кода</i> вместо <i>sc-идентификаторов</i>, являющихся идентификаторами (именами), которые взаимно однозначно соответствуют синонимичным им (представляемым ими) sc-коннекторам, вводятся <i>sc.s-коннекторы</i>, каждый из которых соответствует не одному конкретному sc-коннектору, а некоторому классу однотипных sc-коннекторов. Очевидно, что это ликвидирует необходимость <u>каждому</u> sc-коннектору приписывать уникальный <i>sc-идентификатор</i>. Кроме того, <i>Алфавит sc.s-коннекторов</i> включает в себя элементы этого Алфавита (классы <u>синтаксически</u> эквивалентных <i>sc.s-коннекторов</i>), которые соответствуют <u>всем</u> (!) элементам Алфавита sc-коннекторов, но при этом дополнительно включают в себя и другие элементы Алфавита <i>sc.s-коннекторов</i>, которые соответствуют часто используемым <u>семантически</u> явно выделяемым классам sc-коннекторов. К таким дополнительно вводимым классам <i>sc.s-коннекторов</i> относятся <i>константные sc.s-коннекторы</i> включения множеств (⊃ или ⊂), <i>переменные sc.s-коннекторы</i> включения множеств (_⊃ или ⊂_), <i>sc.s-коннектор</i> синонимии (=), <i>sc.s-коннектор</i> погружения ( = ⊂ или ⊃ =) и др.Заметим, что указанное расширение Алфавита <i>sc.s-коннекторов</i> аналогично расширенному Алфавиту <i>sc.g-коннекторов</i> в SCg-коде и ликвидирует необходимость (как и в SCs-коде) явно специфицировать (средствами SCs-кода) синтаксически выделяемые классы <i>sc.s-коннекторов</i>.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;

			.system_element_2656
			=> .system_element_423: [<p>Во Втором направлении расширения Ядра SCs-кода вводятся модификаторы <i>sc.s-коннекторов</i> (<i><b>sc.s-модификаторы</b></i>), которые позволяют достаточно компактно дополнительно специфицировать <b>sc-коннекторы</b>, изображаемые (представляемые) соответствующими <i>sc.s-коннекторами</i>. Речь идет о такой часто востребованной форме спецификации sc-коннекторов, как указание множества (возможно, нескольких множеств), которому принадлежит специфицируемый  sc-коннектор (чаще всего, таким множеством является <i>бинарное отношение</i> (в частности, <i>ролевое отношение</i>) или <i>квазибинарное отношение</i>).</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;

			.system_element_2648
			<- relation
			(*
				=> nrel_idtf: [<p>относительное понятие</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			=> nrel_idtf: [<p>модификатор sc.s-коннектора*</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_explanation: [<p><i>sc-идентификатор</i>, который (1) находится либо между <i>sc.s-коннектором</i> и <i>двоеточием</i>, либо между <i>двоеточиями</i> и (2) обозначает множество (чаще всего, отношение), которому принадлежит sc-коннектор, изображаемый ближайшим предшествующим <i>sc.s-коннектором</i>. Два подряд идущих двоеточия (::) обозначают, что указанное множество связано с указанным sc-коннектором <i><u>переменной</u> позитивной постоянной sc-дугой принадлежности</i>.Очевидно, что, если не использовать <i>sc.s-модификаторы</i>, указанного вида спецификация sc-коннекторов средствами SCs-кода будет выглядеть значительно более громоздкой.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;

			.system_element_2657
			=> .system_element_423: [<p>В <i>Третьем направлении расширения Ядра SCs-кода</i> осуществляется переход от использования только <i>простых sc-идентификаторов</i> к использованию как <i>простых sc-идентификаторов</i>, так и <i>sc-выражений</i>, а также к использованию <i>sc.s-представлений некоторых неидентифицируемых sc-узлов</i>. Это существенно сокращает число придумываемых <i>простых sc-идентификаторов</i>, т.к. каждое <i>sc-выражение</i> в конечном счете  это комбинация <i>простых sc-идентификаторов</i>, построенная по правилам, которые достаточно легко семантически интерпретируются. Если проводить аналогию с SCg-кодом, то очевидно, что <i><b>sc-выражение</b></i>, ограничиваемое фигурными скобками, есть не что иное, как информационная конструкция, ограничиваемая <i>sc.g-контуром</i>, а <i>sc-выражение</i>, ограничиваемое квадратными скобками есть не что иное, как информационная конструкция, ограничиваемая <i>sc.g-рамкой</i>. Отличие здесь заключается в том, что круглыми и квадратными скобками можно ограничивать только линейные информационные конструкции (цепочки символов).</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;

			.system_element_2658
			=> nrel_idtf: [<p>изображение (представление) неидентифицируемого (неименуемого) sc-узла в sc.s-тексте</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>sc.s-обозначение неименуемой сущности, не являющейся парой, обозначаемой sc-коннектором</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			=> nrel_idtf: [<p>sc.s-представление sc-узла, не являющееся sc-идентификатором (именем этого sc-узла)</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			<= nrel_subdividing: {
				.system_element_2659
				(*
					=> nrel_idtf: [<p>конкатенация левой фигурной скобки и правой фигурной скобки</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				.system_element_2660
				(*
					=> nrel_idtf: [<p>конкатенация левой фигурной скобки, дефиса и правой фигурной скобки</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				.system_element_2661
				(*
					=> nrel_idtf: [<p>конкатенация левой угловой скобки, дефиса и правой угловой скобки</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				.system_element_2662
				(*
					=> nrel_idtf: [<p>конкатенация левой квадратной скобки и правой квадратной скобки</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				.system_element_2663
				(*
					=> nrel_idtf: [<p>конкатенация восклицательного знака, левой квадратной скобки и правой квадратной скобки</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				.system_element_2664
				(*
					=> nrel_idtf: [<p>конкатенация левой круглой скобки, буквы о и правой круглой скобки</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*)
			};
			=> nrel_note: [<p>Если одно и то же обозначение неименуемой сущности встречается в <u>разных</u> <i>sc.s-предложениях</i>, то считается, что это обозначения <u>разных</u> сущностей, т.е. изображения <u>разных</u> sc-узлов.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;

			.system_element_2665
			=> .system_element_423: [<p>В <i>Четвертом направлении расширения Ядра SCs-кода</i> осуществляется переход от использования только <i>простых sc.s-предложений</i> к использованию также <i>sc.s-предложений</i>, построенных с помощью <i><b>Операции</b> присоединения sc.s-предложения*</i>. В результате этого, благодаря склеиванию одинаковых <i><b>sc-идентификаторов</b></i>, а также склеиванию синтаксически эквивалентных <i><b>sc.s-коннекторов</b></i> с одинаковыми <i><b>sc.s-модификаторами</b></i> (несмотря на то, что эти склеиваемые <i>sc.s-коннекторы</i> соответствуют <u>разным</u> <b>sc-коннекторам</b>), существенно сокращается число копий используемых <i><b>sc-идентификаторов</b></i> и <i><b>sc.s-коннекторов</b></i> с их <i><b>sc.s-модификаторами</b></i>.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;

			.system_element_2666
			=> .system_element_423: [<p>В <i>Пятом направлении расширения Ядра SCs-кода</i> разрешается использование <i>присоединенных <b>sc.s-предложений</b></i>. В результате этого <i>sc.s-тексты</i> становятся более компактными и удобными для восприятия за счет снижения числа дублируемых <i>sc-идентификаторов</i> и более широких возможностей их структуризации.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;

			.system_element_265
			-> {
				.system_element_2658;
				scs_divider_connector
				(*
					=> nrel_idtf: [<p>sc.s-представление неидентифицируемого sc-коннектора</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*)
			};
			-> {
				sc_connector;
				scs_divider_connector
			};
			-> {
				scs_divider_connector;
				.system_element_2648
				(*
					=> nrel_idtf: [<p>модификатор sc.s-коннектора*</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					<- relation;;
				*)
			};
			-> {
				scs_divider_connector;
				.system_element_2667
			};
			-> {
				scs_sentence;
				.system_element_2668
			};
			-> {
				scs_divider_connector;
				.system_element_1019
			};
			-> {
				.system_element_811;
				.system_element_143
			};
			=> nrel_inclusion: .intro_scs_transf_examples;;
		*];;
	*];;
*];;
