.segment_2 = [*
.system_element_2134
=> nrel_inclusion: [*

	.system_element_2135
	=> nrel_inclusion: [*

		.system_element_2135
		=> .system_element_2131: <
			.system_element_2136;
			.system_element_2137;
			.system_element_2138
		>;
		<= .system_element_1010: .system_element_2139;;

		.system_element_2140
		=> .system_element_2131: <
			[<p>алфавит используемых символов (элементарных, атомарных фрагментов информационных конструкций, каковыми, в частности, являются буквы), то есть семейство таких попарно непересекающихся классов синтаксически эквивалентных символов, для которых существует простая процедура, позволяющая для любого символа по его синтаксическим особенностям установить факт его принадлежности одному из указанных классов</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>бинарное ориентированное отношение, определяющее непосредственный порядок (последовательность) символов в строках символов</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*)
		>;;

		.system_element_2141
		=> .system_element_2131: <
			[<p>семейство классов <i>синтаксически</i> эквивалентных <i>sc-элементов</i>, в каждый из которых входят <i>sc-элементы</i> с одинаковыми <i>синтаксическими</i> характеристиками или, условно говоря, с одинаковыми наборами <i>синтаксических</i> меток</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			[<p>двое <i>бинарных ориентированных</i> <i>отношений инцидентности sc-элементов</i>, заданных на множестве всех <i>sc-элементов</i>:
			<ul>
				<li> <i>Отношением инцидентности обозначений sc-пар с их компонентами</i>
				<li> <i>Отношением инцидентности обозначений <i>ориентированных</i> sc-пар с их вторыми компонентами</i>,которое является подмножеством <i>Отношения инцидентности обозначений sc-пар с их компонентами</i></li>
			<ul></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*)
		>;;

		.system_element_2139
		=> .system_element_2142: sc_element
		(*
			=> nrel_idtf: [<p>элемент конструкции <i>Ядра SC-кода</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
			=> nrel_idtf: [<p>синтаксически элементарный (атомарный) фрагмент дискретной информационной конструкции, принадлежащей <i>Ядру SC-кода</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
			=> nrel_idtf: [<p>Класс элементов конструкций <i>Ядра SC-кода</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
			=> nrel_idtf: [<p>Множество всех элементов всевозможных конструкций <i>Ядра SC-кода</i></p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);
		=> .system_element_827: .system_element_2143;;

		.system_element_2143
		=> nrel_idtf: [<p>Множество (Семейство) всех классов синтаксически эквивалентных sc-элементов Ядра SC-кода</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>класс синтаксически эквивалентных sc-элементов Ядра SC-кода</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>класс синтаксически эквивалентных элементов конструкций Ядра SC-кода</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>элемент Алфавита Ядра SC-кода</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>синтаксический тип sc-элемента Ядра SC-кода</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		<=> .system_element_72: {
			sc_edge;
			sc_arc_common;
			.system_element_2144;
			.system_element_2145;
			.system_element_2146
		};;

		.system_element_2147
		=> nrel_idtf: [<p><i>Класс константных постоянных позитивных sc-пар принадлежности</i> и Класс всех остальных <i>sc-элементов</i> (задаваемых по умолчанию)</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_note: [<p>Тем не менее, если учитывать особенности обработки в <i>sc-памяти</i> разных классов <i>sc-элементов</i>, целесообразно сделать расширение <i>Минимального алфавита SC-кода</i> и, соответственно, ввести понятие <b><i>Синтаксического Ядра SC-кода</i></b>, а также целого семейства <i>синтаксических расширений Ядра SC-кода</i></p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_explanation: [<p>Если известен смысл выделяемых классов sc-элементов (<i>sc-классов</i>), каждый из которых в <i>sc-памяти</i> представлен константным <i>sc-элементом</i>, обозначающим этот <i>sc-класс</i>, то для "анализа" и понимания <i>sc-конструкций</i>, хранимых в <i>sc-памяти</i>, достаточно синтаксически выделить только Класс <i>константных постоянных позитивных sc-пар принадлежности</i>, с помощью которых каждый <i>sc-элемент</i> будет <i>явно</i> соединяться с <i>sc-элементами</i>, обозначающими те <i>sc-классы</i>, которым этот <i>sc-элемент</i> принадлежит. Очевидно, что таким явным способом выделить указанные <i>константные постоянные позитивные sc-пар принадлежности</i> с помощью самих этих sc-пар невозможно.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_2148
		=> nrel_explanation: [<p><b>класс sc-элементов</b> можно выделить <i>явно</i> путем:

		<ul>

			<li> включения в состав базы знаний <i>sc-элемента</i>, являющегося знаком этого класса sc-элементов (<i>sc-класса</i>);

			<li> проведения <i>постоянных позитивных sc-пар принадлежности</i> во все <i>sc-элементы</i>, являющиеся элементами выделяемого <i>sc-класса</i> и хранимые (присутствующие) в текущем состоянии <i>sc-памяти</i>.</li>

		<ul></p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_962
		=> .system_element_2149: {
			sc_element;
			.system_element_2013;
			.system_element_262;
			.system_element_1945;
			.system_element_1947;
			file;
			.system_element_2121;
			.system_element_2150
		};
		=> nrel_note: [<p><i>SC-коду</i> соответствует несколько синтаксических модификаций, каждая из которых задается:
		<ul>
			<li> своим алфавитом, то есть семейством <i>синтаксически выделяемых классов sc-элементов</i>;
			<li> своим способом представления (кодирования) <i>пар инцидентности sc-элементов</i>, связывающих <i>sc-элементы</i> между собой.</li>
		<ul></p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_2151
		=> nrel_idtf: [<p>семейство синтаксических меток, приписываемых <i>sc-элементам</i> в рамках соответствующей синтаксической модификации SC-кода и указывающих факт принадлежности <i>sc-элемента</i> соответствующему классу <i>sc-элементов</i> (<i>sc-классу</i>)</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		sc_element
		=> nrel_idtf: [<p>элементарный (атомарный) фрагмент информационной конструкции, принадлежащей SC-коду</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>обозначение одной из описываемых сущностей</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_subdividing: .system_element_2143
		(*
			=> nrel_note: [<p><i>Алфавит Ядра SC-кода</i> является одним из признаков классификации sc-элементов.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
			=> nrel_note: [<p>В процессе обработки текстов <i>Ядра SC-кода</i> синтаксический тип <i>sc-элементов</i> может меняться --- <i>sc-узел</i> может трансформироваться в <i>sc-ребро</i>, <i>sc-ребро</i> --- в <i>sc-дугу</i>, <i>sc-дуга</i> общего вида --- в <i>базовую sc-дугу</i>.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);;

		sc_node
		<=> .system_element_2152;;

		.system_element_2013
		=> nrel_idtf: [<p>sc-конструкция</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>множество sc-элементов</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>информационная конструкция SC-кода</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_262
		=> nrel_idtf: [<p>sc-множество, содержащее sc-связки (знаки связей) между элементами этого множества</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_1945
		=> nrel_idtf: [<p>связная sc-структура, являющаяся семантически корректной в рамках Базовой денотационной семантики SC-кода, а также синтаксически корректной в рамках соответствующей синтаксической модификации SC-кода</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_1947
		=> nrel_idtf: [<p>sc-текст, обладающий дополнительным свойством иметь истинное значение по отношению к соответствующей предметной области</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		file
		=> nrel_idtf: [<p>информационная конструкция, которая не является sc-конструкцией и которая может храниться в файловой памяти ostis-системы</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_2121
		<= nrel_inclusion: file;
		=> nrel_idtf: [<p>файл, являющийся внешним идентификатором (в частности, именем) соответствующего sc-элемента, хранимого в sc-памяти ostis-системы</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_2150
		=> nrel_idtf: [<p>sc-идентификатор, который взаимно однозначно соответствует идентифицируемому sc-элементу</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_2153
		=> nrel_idtf: [<p>класс <i>sc-элементов</i>, определяемый на основе <i>Алфавита Ядра SC-кода^</i></p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>синтаксически выделяемый в рамках <i>Ядра SC-кода</i> класс sc-элементов</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>синтаксическая метка, приписываемая sc-элементам в рамках <i>Ядра SC-кода</i></p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>синтаксическая метка sc-элементов, выделяющая в рамках <i>Ядра SC-кода</i> соответствующий класс синтаксически эквивалентных sc-элементов</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>класс синтаксически эквивалентных sc-элементов в рамках <i>Ядра SC-кода</i></p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_idtf: [<p>синтаксический тип sc-элементов, выделяемый в рамках <i>Ядра SC-кода</i></p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_note: [<p>В различных синтаксических <i>расширениях Ядра SC-кода</i> синтаксически выделяемые sc-классы могут пересекаться. То есть sc-элемент может принадлежать сразу несколькими синтаксически выделяемым <i>sc-классам</i>.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		-> sc_connector;
		-> sc_arc;
		=> nrel_inclusion: .system_element_2143;;

		sc_arc
		<=> .system_element_2154;
		=> nrel_subdividing: {
			sc_arc_common;
			.system_element_2144
		};;

		sc_connector
		<=> .system_element_2155;
		=> nrel_subdividing: {
			.system_element_2156;
			sc_arc_common
		};;
	*];;

	.system_element_2157
	=> nrel_inclusion: [*

		sc_element
		=> nrel_subdividing: {
			sc_connector
			(*
				=> nrel_subdividing: {
					sc_edge;
					sc_arc
					(*
						=> nrel_subdividing: {
							.system_element_2144;
							sc_arc_common
						};;
					*)
				};;
			*);
			sc_node
			(*
				=> nrel_subdividing: {
					.system_element_2145;
					.system_element_2146
				};;
			*)
		};
		=> nrel_note: [<p>Все классы <i>sc-элементов</i>, входящие в состав синтаксической классификации sc-элементов являются синтаксически выделяемыми классами <i>sc-элементов</i>.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_note: [<p>Формирование, семейства <i>синтаксически выделяемых sc-классов</i> (то есть семейства синтаксических меток, приписываемых sc-элементам) может осуществляться на основе <i>синтаксической классификации</i> <i>sc-элементов</i> по <i>различным</i> признакам. Желательно при этом, чтобы такая синтаксическая классификация <i>sc-элементов</i> была согласована с семантической классификацией sc-элементов.Другими словами, каждый <i>синтаксически выделяемый sc-класс</i> (каждая синтаксическая метка) должен иметь четкую семантическую интерпретацию, то есть должен быть одновременно и <i>семантически выделяемым sc-классом</i>.</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
			=> .system_element_35: .system_element_2158;;
		*);;

		.system_element_265
		-> {
			.system_element_2159;
			.system_element_2160;
			.system_element_1980
			(*
				=> nrel_idtf: [<p>Класс sc-элементов, выделяемый (задаваемый) явно с помощью sc-конструкции, состоящей (1) из sc-элемента, являющего <i>знаком</i> этого класса и (2) из константных постоянных позитивных sc-пар принадлежности, соединяющих указанный знак выделяемого класса sc-элементов со всеми sc-элементами, принадлежащими этому классу и хранимыми в текущем состоянии sc-памяти</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*)
		};
		-> {
			.system_element_2161
			(*
				=> nrel_explanation: [<p>Соотношение между sc-элементом и тем, что он обозначает (его денотатом) и соответствующую <i>семантическую</i> классификацию всего множества sc-элементов</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			.system_element_2162
			(*
				=> nrel_explanation: [<p>Синтаксическую метку (значение синтаксического признака-параметра), приписываемую каждому sc-элементу и соответствующую <i>синтаксическую</i> классификацию всего множества sc-элементов (Алфавит SC-кода^)</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*)
		};;

		.system_element_2163
		=> .system_element_264: [<p>Бинарное ориентированное отношение, первым компонентом каждой ориентированной пары которого является некоторый sc-коннектор, а вторым компонентом является один из sc-элементов, соединяемых указанным sc-коннектором с некоторым другим sc-элементом, который указывается в другой паре инцидентности для этого же sc-коннектора</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_2164
		=> .system_element_264: [<p>Бинарное ориентированное отношение, первым компонентом каждой ориентированной пары которого является некоторая sc-дуга, а вторым компонентом --- sc-элемент, в который указанная sc-дуга входит, т.е. sc-элемент, который является вторым компонентом, соединяемым (связываемым) указанной sc-дугой</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_2139
		=> .system_element_2166: .system_element_2165
		(*
			-> {
				.system_element_2167
				(*
					<=> .system_element_72: {
						.system_element_2163
						(*
							=> nrel_inclusion: .system_element_2164;;
							<- .system_element_860;;
						*)
					};;
				*);
				[<p>Для каждого sc-коннектора существует две и только две пары <i>инцидентности sc-коннекторов*</i>, указанный sc-коннектор является первым связующим компонентом. При этом для каждой sc-дуги из двух указанных пар инцидентности <u>одна</u> должна принадлежать отношению инцидентности <i>входящей sc-дуги*</i>.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>Пары инцидентности sc-коннекторов могут быть <u>кратными</u>. То есть sc-коннектор может соединять (связывать) sc-элемент с самим собой. Такие sc-коннекторы будем называть петлевыми sc-коннекторами (петлевыми sc-ребрами и петлевыми sc-дугами).</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>Само <i>Отношение инцидентности sc-коннекторов*</i> и, следовательно, <i>Отношение инцидентности входящих sc-дуг*</i> не имеет кратных пар инцидентности. То есть sc-коннектор не может быть инцидентен самому себе.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>В область определения <i>Отношения инцидентности sc-коннекторов*</i> и <i>Отношения инцидентности входящих sc-дуг*</i> входят не только sc-узлы общего вида, но и sc-коннекторы. Это значит, что sc-коннектор может соединять (связывать) не только sc-узел с sc-узлом, но также sc-узел с sc-коннектором и даже sc-коннектор с sc-коннектором.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*)
			};;
		*);;
	*];;

	.system_element_2168
	=> nrel_inclusion: [*

		.system_element_2139
		=> .system_element_1004: .system_element_2168
		(*
			=> nrel_idtf: [<p>Описание соответствия информационных конструкций, принадлежащих <i>Ядру SC-кода</i>, и сущностей, описываемых этими конструкциями</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);;

		.system_element_2169
		-> .system_element_2143;
		-> .system_element_2170;
		-> .system_element_2171;
		-> .system_element_2172;
		-> .system_element_2173;
		-> .system_element_2174;;
	*];;

	.system_element_2175
	=> nrel_inclusion: [*
		=> nrel_note: [<p>Приведенная типология полностью аналогична <i>Структурной типологии sc-элементов^</i>, в отличие от которой она описывает структурную классификацию только константных sc-элементов (<i>sc-констант</i>).</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		<- .system_element_262;
		<=> .system_element_774: .system_element_2171;;

		sc_constant
		=> nrel_subdividing: .system_element_2176
		(*
			<=> .system_element_72: {
				.system_element_2013
				(*
					=> nrel_subdividing: {
						.system_element_2028
						(*
							=> nrel_subdividing: {
								.system_element_1975;
								.system_element_2034
								(*
									=> nrel_subdividing: {
										.system_element_2037;
										.system_element_2040
									};;
								*);
								.system_element_2060
							};;
						*);
						.system_element_1980;
						.system_element_262
					};;
				*);
				.system_element_2093
				(*
					=> nrel_idtf: [<p>sc-элемент, являющийся знаком внешней сущности</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_idtf: [<p>знак внешней сущности</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_idtf: [<p>знак сущности, не являющейся sc-множеством (sc-конструкцией)</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_subdividing: {
						file;
						.system_element_2177;
						.system_element_2178
					};;
				*)
			};;
		*);;

		.system_element_2040
		=> nrel_subdividing: {
			.system_element_2043
			(*
				=> nrel_subdividing: {
					.system_element_2046;
					.system_element_2049
					(*
						=> nrel_inclusion: .system_element_2051
						(*
							<= .system_element_2179: {
								sc_constant;
								permanent_entity;
								.system_element_2180;
								.system_element_2049
							};;
						*);;
						=> nrel_inclusion: .system_element_2052
						(*
							<= .system_element_2179: {
								sc_constant;
								temporary_entity;
								.system_element_2181;
								.system_element_2049
							};;
						*);;
					*);
					.system_element_2054
				};;
			*);
			.system_element_2182
		};;
	*];;

	.system_element_2158
	=> nrel_inclusion: [*

		sc_element
		=> .system_element_2183: {
			.system_element_2184
			(*
				=> .system_element_35: .system_element_2185;;
			*);
			.system_element_2186
			(*
				=> .system_element_35: .system_element_2187;;
			*);
			.system_element_2188
			(*
				=> nrel_idtf: [<p>темпоральная характеристика sc-элементов</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_inclusion: .system_element_2189
				(*
					=> .system_element_35: .system_element_2190;;
				*);;
				=> nrel_inclusion: .system_element_2191;;
				=> nrel_inclusion: .system_element_2192
				(*
					=> .system_element_35: .system_element_2193;;
					=> nrel_idtf: [<p>стационарность обозначаемой сущности</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);;
				=> nrel_inclusion: .system_element_2194
				(*
					=> nrel_idtf: [<p>изменчивость обозначаемой сущности</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);;
			*)
		};;

		sc_element
		=> nrel_idtf: [<p>обозначение описываемой сущности</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_subdividing: .system_element_2171
		(*
			<=> .system_element_72: {
				.system_element_2195
				(*
					=> nrel_subdividing: {
						.system_element_2196
						(*
							=> nrel_idtf: [<p>обозначение внешней сущности, не являющейся информационной конструкцией</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
							=> nrel_note: [<p>К материальным сущностям относятся физические тела, поля, биологические объекты, технические системы и многое другое.</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
						*);
						.system_element_2197
						(*
							=> nrel_note: [<p>Примерами абстрактных терминальных сущностей являются предельно малые физические тела, точки различных пространств, числа.</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
						*);
						.system_element_2198
						(*
							=> nrel_idtf: [<p>обозначение информационной конструкции, не являющейся ни sc-множеством, ни файлом</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
							=> nrel_idtf: [<p>обозначение информационной конструкции, не являющейся конструкцией <i>SC-кода</i> и тем более <i>Ядра SC-кода</i></p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
							=> nrel_idtf: [<p>обозначение "инородной" для <i>SC-кода</i> информационной конструкции</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
							=> nrel_inclusion: .system_element_2019
							(*
								=> nrel_idtf: [<p>обозначение внешней информационной конструкции, представленной в электронной форме</p>]
								(*
									<- lang_ru;;
									=> nrel_format: format_html;;
								*);;
							*);;
						*)
					};;
				*);
				.system_element_1999
				(*
					=> nrel_subdividing: {
						.system_element_2027;
						.system_element_2062;
						.system_element_2091
					};;
				*)
			};;
		*);;

		.system_element_2027
		=> nrel_subdividing: {
			.system_element_2199
			(*
				=> nrel_inclusion: .system_element_2031;;
				=> nrel_inclusion: .system_element_2059;;
			*);
			.system_element_2033
			(*
				=> nrel_subdividing: {
					.system_element_2036;
					.system_element_2200;
					.system_element_2039
					(*
						=> nrel_inclusion: .system_element_2042
						(*
							=> nrel_subdividing: {
								.system_element_2201;
								.system_element_2202;
								.system_element_2203
							};;
						*);;
						=> nrel_inclusion: .system_element_2204;;
					*)
				};;
			*)
		};;

		sc_element
		=> nrel_subdividing: .system_element_2172
		(*
			<=> .system_element_72: {
				sc_constant
				(*
					=> nrel_idtf: [<p>sc-элемент, логико-семантическим значением которого является он сам</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_idtf: [<p>константный sc-элемент</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_idtf: [<p>обозначение конкретной (фиксированной) сущности</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				sc_variable
				(*
					=> nrel_idtf: [<p>переменный sc-элемент</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_idtf: [<p>обозначение произвольной сущности из некоторого множества сущностей</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_idtf: [<p>sc-элемент, имеющий (принимающий) произвольное значение из некоторого множества sc-элементов</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_subdividing: {
						.system_element_2205
						(*
							=> nrel_idtf: [<p>sc-элемент, областью возможных значений которого является множество sc-констант</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
						*);
						.system_element_2206
						(*
							=> nrel_idtf: [<p>sc-элемент, возможными значениями которого являются переменные 1-го уровня</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
							=> nrel_note: [<p>Такие переменные (метапеременные) необходимы для описания логических языков.</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
						*);
						.system_element_2207
						(*
							=> nrel_idtf: [<p>sc-переменная, на значения которой не накладывается никаких ограничений</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
						*)
					};;
				*)
			};;
		*);
		=> nrel_subdividing: .system_element_2208
		(*
			<=> .system_element_72: {
				.system_element_2209;
				.system_element_2106
				(*
					=> nrel_idtf: [<p>обозначение нестационарной сущности, факт существования которой зависит от времени</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_subdividing: {
						.system_element_2210
						(*
							=> nrel_idtf: [<p>обозначение сущности, существовавшей до текущего момента времени</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
						*);
						.system_element_2211
						(*
							=> nrel_idtf: [<p>обозначение сущности, существующей в текущий момент времени</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
						*);
						.system_element_2212
						(*
							=> nrel_idtf: [<p>обозначение сущности, существование которой прогнозируется или планируется в будущем</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
						*)
					};;
					=> nrel_subdividing: {
						.system_element_2213
						(*
							=> nrel_inclusion: .system_element_1979;;
							=> nrel_inclusion: .system_element_2214;;
							=> nrel_inclusion: .system_element_2215;;
						*);
						.system_element_2216
						(*
							=> nrel_subdividing: {
								.system_element_2217
								(*
									=> nrel_idtf: [<p>обозначение ситуации, которая возникла или возникает в процессе обработки информации в sc-памяти</p>]
									(*
										<- lang_ru;;
										=> nrel_format: format_html;;
									*);;
								*);
								.system_element_2218
								(*
									=> nrel_idtf: [<p>обозначение события, которое произошло или произойдет в процессе обработки информации в sc-памяти</p>]
									(*
										<- lang_ru;;
										=> nrel_format: format_html;;
									*);;
								*);
								.system_element_2219
								(*
									=> nrel_idtf: [<p>обозначение внутреннего процесса в sc-памяти, который происходит, произошел или будет происходить</p>]
									(*
										<- lang_ru;;
										=> nrel_format: format_html;;
									*);;
								*)
							};;
						*)
					};;
				*)
			};;
		*);
		=> nrel_subdividing: .system_element_2220
		(*
			<=> .system_element_72: {
				.system_element_2221
				(*
					=> nrel_idtf: [<p>обозначение статичной сущности</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_idtf: [<p>обозначение стационарной сущности</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_idtf: [<p>обозначение сущности, изменения которой в рамках соответствующего интервала времени ее существования считаются несущественными</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_inclusion: .system_element_2222;;
				*);
				.system_element_2223
				(*
					=> nrel_idtf: [<p>обозначение сущности изменяющейся во времени</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_inclusion: .system_element_2224;;
				*)
			};;
		*);
		=> nrel_subdividing: .system_element_2174
		(*
			<=> .system_element_72: {
				.system_element_2225
				(*
					=> nrel_idtf: [<p>sc-элемент, считающийся логически удаленным, но присутствующим в описании истории эксплуатации и эволюции базы знаний</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				present_sc_element
				(*
					=> nrel_idtf: [<p>sc-элемент, входящий в состав эксплуатируемой части базы знаний</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);
				.system_element_2226
				(*
					=> nrel_idtf: [<p>sc-элемент, планируемый для включения в состав эксплуатируемой части базы знаний</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*)
			};;
			=> .system_element_265: {
				[<p>Временный характер присутствия любого <i>sc-элемента</i> в составе той <i>базы знаний</i> (в той <i>sc-памяти</i>) <i>ostis-системы</i>, в которой он находится (когда-то он появляется, когда-то может быть удален из <i>sc-памяти</i>).</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>Временный характер присутствия в <i>sc-памяти</i> всей заданной <i>sc-конструкции</i> (заданного множества sc-элементов) --- такую <i>sc-конструкцию</i> будем называть <i>ситуацией в sc-памяти</i>.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>Временный характер существования <i>внешней сущности</i>, которую <i>sc-элемент</i> обозначает.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>Статичный или динамичный (изменчивый) характер <i>внешней сущности</i>, обозначаемой <i>sc-элементом</i>. Динамический характер внешней сущности, предполагает наличие в <i>sc-памяти</i> описания процесса изменения состояния или конфигурации указанной <i>внешней сущности</i>.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p><i>динамическое sc-множество</i> (динамическая sc-конструкция), являющееся отражением (динамической моделью) соответствующего внешнего процесса (процесса, происходящего во внешней среде).</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p><i>динамическое sc-множество</i> (динамическая sc-конструкция), являющееся отражением (динамической моделью) соответствующего внутреннего процесса (информационного процесса, происходящего в той же <i>sc-памяти</i>, в которой находится <i>sc-элемент</i>, обозначающий указанное динамическое <i>sc-множество</i>).</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*)
			};;
		*);;

		.system_element_2227
		=> nrel_idtf: [<p>обозначение множества sc-элементов</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_subdividing: {
			.system_element_2228
			(*
				=> nrel_idtf: [<p>sc-переменная, обозначающая произвольное множество из некоторого семейства множеств</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_idtf: [<p>переменное множество</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			set
			(*
				=> nrel_idtf: [<p>конкретное (константное, фиксированное) множество sc-элементов</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*)
		};;

		set
		=> nrel_idtf: [<p>множество sc-элементов</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_subdividing: {
			.system_element_2229
			(*
				=> nrel_idtf: [<p>множество, элементами которого являются только sc-константы</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			.system_element_515
			(*
				=> nrel_idtf: [<p>множество, элементами которого являются только sc-переменные</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_inclusion: sc_variable
				(*
					=> nrel_idtf: [<p>множество, элементами которого являются всевозможные sc-переменные и только они</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
					=> nrel_inclusion: .system_element_2228
					(*
						=> nrel_idtf: [<p>sc-переменная, значениями которой являются всевозможные обозначения множеств и только они</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
					*);;
				*);;
			*);
			.system_element_2230
			(*
				=> nrel_idtf: [<p>множество, в число элементов которого входят как sc-константы, так и sc-переменные</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_inclusion: .system_element_2227
				(*
					=> nrel_idtf: [<p>множество, элементами которого являются всевозможные <b>sc-переменные</b> и <b>sc-константы</b>, обозначающие множества и только они</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);;
				*);;
			*)
		};;

		.system_element_2027
		=> nrel_idtf: [<p>обозначение связи между sc-элементами и/или обозначаемыми ими сущностями</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_subdividing: {
			.system_element_2231
			(*
				=> nrel_idtf: [<p>sc-переменная, значениями которой являются обозначения sc-связок</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			.system_element_2028
			(*
				=> nrel_idtf: [<p>конкретная sc-связка sc-элементов</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*)
		};
		=> nrel_inclusion: .system_element_2033
		(*
			=> nrel_idtf: [<p>обозначение sc-связки двух sc-элементов либо одного sc-элемента с самим собой</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
			=> nrel_inclusion: .system_element_2034;;
			=> nrel_idtf: [<p>конкретная sc-пара</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
			<= nrel_inclusion: sc_constant;;
			=> nrel_inclusion: sc_connector;;
			=> nrel_inclusion: .system_element_2040
			(*
				=> nrel_inclusion: .system_element_2043
				(*
					=> nrel_subdividing: {
						.system_element_2232
						(*
							=> nrel_inclusion: .system_element_2233
							(*
								=> nrel_inclusion: .system_element_2144;;
							*);;
						*);
						.system_element_2234;
						.system_element_2235
					};;
				*);;
			*);;
		*);;

		.system_element_2236
		=> nrel_idtf: [<p>обозначение множества sc-элементов, которые в соответствующем смысле эквивалентны друг другу, т.е. имеют одинаковые свойства</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_subdividing: {
			.system_element_2237
			(*
				<= nrel_inclusion: sc_variable;;
				<- sc_constant;;
			*);
			class
			(*
				<= nrel_inclusion: sc_constant;;
			*)
		};;

		class
		=> nrel_subdividing: {
			.system_element_2238;
			class_of_sets
			(*
				=> nrel_subdividing: {
					.system_element_2239
					(*
						=> nrel_inclusion: .system_element_2069;;
					*);
					class_of_classes
					(*
						=> nrel_inclusion: parameter;;
					*);
					class_of_structures
					(*
						=> nrel_inclusion: sc_lang
						(*
							=> nrel_idtf: [<p>специализированный язык, являющийся подъязыком SC-кода, и обеспечивающий представление всевозможных знаний в рамках соответствующей предметной области, которая, в свою очередь, специфицируется соответствующей комплексной онтологией</p>]
							(*
								<- lang_ru;;
								=> nrel_format: format_html;;
							*);;
						*);;
					*)
				};;
			*)
		};
		-> .system_element_1999
		(*
			=> nrel_inclusion: .system_element_2013;;
		*);
		-> set;
		-> .system_element_2027
		(*
			=> nrel_inclusion: .system_element_2028;;
		*);
		-> .system_element_2028;
		-> .system_element_2062
		(*
			=> nrel_inclusion: .system_element_1980;;
		*);
		-> .system_element_1980;
		-> .system_element_2091
		(*
			=> nrel_inclusion: .system_element_262;;
		*);
		-> .system_element_262;
		-> .system_element_2240
		(*
			=> nrel_inclusion: .system_element_796
			(*
				=> nrel_inclusion: file
				(*
					=> nrel_inclusion: .system_element_814
					(*
						=> nrel_inclusion: .system_element_1743;;
					*);;
				*);;
			*);;
		*);
		=> nrel_inclusion: .system_element_2091;
		=> nrel_note: [<p>Все семантически и синтаксически выделяемые классы sc-элементов, а также всевозможные подклассы этих классов являются экземплярами (элементами) <i>класса</i></p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);;

		.system_element_2091
		=> nrel_idtf: [<p>обозначение sc-множества, не являющегося ни sc-связкой, ни sc-классом</p>]
		(*
			<- lang_ru;;
			=> nrel_format: format_html;;
		*);
		=> nrel_subdividing: {
			.system_element_2241
			(*
				<= nrel_inclusion: sc_variable;;
			*);
			structure
			(*
				=> nrel_idtf: [<p>конкретная sc-структура</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				<= nrel_inclusion: sc_constant;;
			*)
		};;
	*];;

	.system_element_2242
	=> nrel_inclusion: [*

		.system_element_2243
		=> nrel_inclusion: [*
			=> nrel_idtf: [<p>класс sc-элементов, определяемый сущностями, которые обозначаются этими sc-элементами, также доступностью (активностью использования) sc-элементов в процессе эксплуатации и эволюции базы знаний</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			<- .system_element_2195
			(*
				=> nrel_inclusion: .system_element_2244;;
			*);
			<- .system_element_2245
			(*
				=> nrel_inclusion: .system_element_2244;;
			*);
			<- .system_element_2033
			(*
				<=> nrel_pair_of_intersecting_sets: .system_element_2244;;
				=> nrel_inclusion: sc_connector;;
				=> nrel_note: [<p><i>обозначение sc-пары</i> может быть представлено либо <i>sc-узлом общего вида</i>, либо <i>sc-коннектором</i>. При этом каждый <i>sc-коннектор</i> представляет собой <i>обозначение sc-пары</i>.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			<- .system_element_2036
			(*
				=> nrel_idtf: [<p>обозначение бинарной неориентированной связи между sc-элементами</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				<=> nrel_pair_of_intersecting_sets: 
					.system_element_2244;
					.system_element_2156
				;;
				=> nrel_note: [<p>Каждый <i>sc-элемент</i>, принадлежащий этому классу, связывается с элементами обозначаемого им множества</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_note: [<p><i>обозначение неориентированной sc-пары</i> может быть представлено либо <i>sc-узлом общего вида</i>, либо <i>sc-ребром</i>. При этом не каждое <i>sc-ребро</i> представляет обозначение <i>неориентированный sc-пары</i>. Некоторые из них представляют <i>обозначения ориентированных sc-пар неизвестной направленности</i>.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			<- .system_element_1990
			(*
				<=> nrel_pair_of_intersecting_sets: 
					.system_element_2244;
					.system_element_2156
				;;
			*);
			<- .system_element_2246
			(*
				=> nrel_note: [<p>Каждый <i>sc-элемент</i>, принадлежащий этому классу, связывается с элементами обозначаемого им множества:
				<ul>
					<li> <i>одной</i> парой инцидентности, связывающей <i>обозначение sc-пары</i> с ее компонентом;
					<li> <i>одной</i> парой инцидентности, связывающей <i>обозначение ориентированной sc-пары</i> с ее вторым компонентом</li>
				<ul></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			<- .system_element_2039
			(*
				=> nrel_idtf: [<p>обозначение бинарной ориентированной связи между sc-элементами</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				<=> nrel_pair_of_intersecting_sets: 
					.system_element_2244;
					.system_element_2156
				;;
				=> nrel_inclusion: sc_arc_common;;
			*);
			<- .system_element_2247
			(*
				=> nrel_note: [<p>Каждый элемент этого класса, как и любое другое <i>обозначение ориентированной sc-пары</i>, является первым компонентом <i>пары инцидентности обозначения sc-пары с ее компонентом</i>, а также первым компонентом <i>пары инцидентности обозначения ориентированной sc-пары с ее вторым компонентом</i></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			<- .system_element_2248
			(*
				<=> nrel_pair_of_intersecting_sets: 
					.system_element_2244;
					.system_element_2156;
					sc_arc_common
				;;
				=> nrel_inclusion: .system_element_2144;;
				<= .system_element_2179: {
					sc_constant;
					.system_element_2209
					(*
						=> nrel_idtf: [<p>обозначение постоянно существующей сущности</p>]
						(*
							<- lang_ru;;
							=> nrel_format: format_html;;
						*);;
					*);
					.system_element_2042
				};;
			*);
			<- .system_element_2236
			(*
				<= nrel_inclusion: .system_element_2244;;
			*);
			<- .system_element_2249
			(*
				<= nrel_inclusion: .system_element_2244;;
			*);
			<- file
			(*
				=> nrel_idtf: [<p>знак файла</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
				=> nrel_note: [<p>Для <i>sc-элементов</i> этого класса необходимо на "синтаксическом" уровне обеспечить возможность связи этого <i>sc-элемента</i> с обозначаемым им <i>файлом</i>, хранимым в <i>файловой памяти</i> этой же <i>ostis-системы</i></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);;
			*);
			<- .system_element_2250
			(*
				=> nrel_inclusion: .system_element_2031;;
				=> nrel_inclusion: .system_element_2059;;
				=> nrel_inclusion: .system_element_2062;;
				=> nrel_inclusion: .system_element_2091;;
				=> nrel_inclusion: .system_element_2251;;
			*);;
		*];;

		.system_element_2242
		=> nrel_inclusion: [*

			.system_element_2139
			=> .system_element_2253: .system_element_2252
			(*
				-> {
					[<p>Каждый sc-элемент является знаком (обозначением) некоторой описываемой сущности.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p>Любая сущность может быть обозначена sc-элементом и, соответственно, описана в виде конструкции Ядра SC-кода.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p>С помощью sc-элементов можно описать любые связи между sc-элементами и/или между сущностями, которые обозначаются этими sc-элементами. При этом указанные связи трактуются как множества связываемых sc-элементов и обозначаются sc-ребрами, sc-дугами, а в случае небинарных связей --- sc-узлами.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p>Поскольку каждый <b>sc-коннектор</b> семантически трактуется как обозначение пары <b>sc-элементов</b>, связываемых (соединяемых) этим <b>sc-коннектором</b>, каждая пара инцидентности <b>sc-коннектора</b> семантически интерпретируется как обозначение пары принадлежности, связывающей <b>sc-коннектор</b> с одним из элементов обозначаемой им пары <b>sc-элементов</b>.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p><u>Любая</u> описываемая сущность может быть обозначена sc-узлом общего вида, но обратное неверно, т.к. некоторые сущности могут быть обозначены sc-ребрами общего вида, sc-дугами общего вида, базовыми sc-дугами.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p>Каждое sc-ребро является обозначением либо бинарной неориентированной связи между sc-элементами, либо бинарной ориентированной связи неизвестной направленности между sc-элементами.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*);
					[<p>Любая бинарная неориентированная связь между sc-элементами может быть обозначена sc-ребром, но обратное неверно.</p>]
					(*
						<- lang_ru;;
						=> nrel_format: format_html;;
					*)
				};;
			*);;

			.system_element_2254
			=> nrel_idtf: [<p>Правила модификации синтаксического типа sc-элементов в рамках Ядра SC-кода</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);
			-> {
				[<p>Если <i>sc-узел общего вида</i> является <i>обозначением sc-пары</i>, то он трансформируется в <i>sc-коннектор</i></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>Если <i>sc-узел общего вида</i> является <i>обозначением неориентированной sc-пары</i> или <i>обозначением ориентированной sc-пары неизвестной направленности</i>, то он трансформируется в <i>sc-ребро общего вида</i></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>Если <i>sc-узел общего вида</i> или <i>sc-ребро общего вида</i> являются <i>обозначением ориентированной sc-пары</i> и при этом дополнительно указана направленность этой sc-пары, то она трансформируется в <i>sc-дугу общего вида</i>.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>Если <i>sc-узел общего вида</i> или <i>sc-ребро общего вида</i> или <i>sc-дуга общего вида</i> являются <i>константными постоянными позитивными парами принадлежности</i>, то они трансформируются в <i>базовую sc-дугу</i>.</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*)
			};;

			.system_element_265
			-> {
				.system_element_2255;
				.system_element_2256;
				.system_element_2243
			};;

			.system_element_2257
			=> .system_element_172: 
				[<p>пара инцидентности sc-элементов*</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p><i>пара инцидентности обозначения sc-пары с ее компонентом</i>*</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*)
			;
			=> nrel_note: 
				[<p>Каждая пара, принадлежащая данному отношению семантически трактуется как <i>обозначение sc-пары принадлежности</i>, но синтаксически оформляется не в виде самостоятельного <i>sc-элемента</i>, а в виде бинарной ориентированной связи между <i>sc-элементами</i>, что аналогично бинарным ориентированным связям, описывающим последовательность символов в строке символов. Заметим при этом, что конфигурация <i>sc-конструкций</i> в отличие от строк символов не является линейной. Заметим также, что уточнение семантической интерпретации пар инцидентности <i>sc-элементов</i> полностью определяется семантической типологией первых компонентов этих пар инцидентности, то есть семантической типологией <i>обозначений sc-пар</i>, являющихся первыми компонентами рассматриваемых пар инцидентности:
				<ul>
					<li> если указанное <i>обозначение sc-пары</i> является <i>sc-константой</i>, то соответствующая пара инцидентности трактуется как <i>пара константной принадлежности</i>;
					<li> если указанное <i>обозначение sc-пары</i> является <i>sc-переменной</i>, то соответствующая пара инцидентности трактуется как <i>пара переменной принадлежности</i>;
					<li> если указанное <i>обозначение sc-пары</i> является <i>обозначением постоянной сущности</i>, то соответствующая пара инцидентности трактуется как <i>пара постоянной принадлежности</i>;
					<li> если указанное <i>обозначение sc-пары</i> является <i>обозначением временной сущности</i>, то соответствующая пара инцидентности трактуется как <i>пара временной принадлежности</i>.</li>
				<ul></p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*);
				[<p>Подчеркнем, что первыми компонентами пар инцидентности <i>sc-элементов</i> всегда являются <i>обозначения sc-пар</i>, но вторыми компонентами пар инцидентности <i>sc-элементов</i> могут быть <i>sc-элементы</i> любого типа (в том числе, и <i>обозначения sc-пар</i>)</p>]
				(*
					<- lang_ru;;
					=> nrel_format: format_html;;
				*)
			;
			=> nrel_explanation: [<p>Каждая <i>sc-пара</i> (константная пара sc-элементов), каждая <i>переменная sc-пара</i> и каждое <i>обозначение sc-пары</i> связывается со своими элементами не явно вводимыми константными или переменными <i>sc-парами позитивной принадлежности</i>, а реализуемыми на "физическом" уровне связями (парами) инцидентности. Таким образом <i>пары инцидентности sc-элементов</i> --- это специальным образом синтаксически выделенные константные или переменные <i>sc-пары позитивной принадлежности</i>, связывающие <i>обозначения sc-пар</i> с элементами этих пар. Соответственно этому синтаксические особенности имеют и все <i>обозначения sc-пар</i>, поскольку только из них могут выходить ориентированные <i>пары инцидентности</i>. Поэтому с синтаксической точки зрения <i>обозначения sc-пар</i> будем называть <b><i>sc-коннекторами</i></b>, <i>обозначения неориентированных sc-пар</i> --- <b><i>sc-ребрами</i></b>, а <i>обозначения ориентированных sc-пар</i> --- <b><i>sc-дугами</i></b>. При этом из класса <i>пар инцидентности sc-элементов</i> выделим подкласс пар, связывающих обозначения sc-дуг с теми sc-элементами, в которые эти дуги входят. Такую пару инцидентности будем называть <b><i>парой инцидентности входящей sc-дуги</i></b>.</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*];;
	*];;
*];;

*];;