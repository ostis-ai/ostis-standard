.intro_hs_segment10 = [*
.system_element_5372
=> nrel_inclusion: [*
	=> nrel_epigraph: [<p>From data science to knowledge science.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;

	.system_element_6128
	=> nrel_subdividing: {
		.system_element_6129;
		.system_element_6130
	};;

	.system_element_6129
	=> nrel_note: [<p>Первое направление эволючии включает в себя следующее:

	<ul>

		<li> расширение множества и многообразия задач, решаемых компьютерной системой

		<li> повышение сложности этих задач вплоть до трудно формализуемых (трудно решаемых) задач, интеллектуальных задач, решаемых в условиях неполноты, неточности, нечеткости и так далее

		<li> повышение качества решения задач либо путем более эффективного использования известных моделей решения задач (например, путем разработки более качественных алгоритмов), либо путем использования принципиально новых моделей решения задач

		<li> расширение многообразия используемых видов информации (знаний)

		<li> расширение многообразия используемых моделей решения задач</li>

	<ul></p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_note: [<p>Очевидно, что расширение множества решаемых задач в условиях пусть и большой, но всегда конечной памяти компьютерной системы делает все более и более актуальным переход от частных методов и моделей решения задач к их обобщениям (или, как отмечал Д. А. Поспелов, от связки "ключей" к набору "отмычек")</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_note: [<p>Очевидно также, что многообразие видов задач, решаемых компьютерными системами, многообразие используемых моделей решения задач приводит:
	<ul>
		<li> к интегрированным информационным ресурсам
		<li> к интегрированным решателям задач
		<li> к интегрированным компьютерным системам
		<li> к коллективам компьютерных систем</li>
	<ul></p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_note: [<p>Проблема здесь заключается не в самой интеграции, а в ее качестве. Интеграция может быть эклектичной, если не обеспечить совместимость интегрируемых компонентов, а в случае такой совместимости интеграция может привести к новому качеству, к дополнительному расширению множества решаемых задач. Это будет означать переход от эклектичности к гибридности, синергетичности.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;

	.system_element_6130
	=> nrel_idtf: [<p>повышение уровня обучаемости компьютерных систем и, как следствие, темпов их эволюции</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;

	.system_element_6131
	=> .system_element_6132: {
		.system_element_6133;
		.system_element_6134
		(*
			=> nrel_idtf: [<p>ограничения на множество всех тех задач, которые принципиально могут быть решены данной компьютерной системой</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*)
	};;

	.system_element_6133
	=> .system_element_6132: {
		.system_element_6135
		(*
			=> nrel_idtf: [<p>многообразие и трудоемкость возможных изменений, вносимых в систему в процессе пополнения системы новыми знаниями и навыками и совершенствования уже приобретенных знаний и навыков</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);
		.system_element_6136
		(*
			=> nrel_idtf: [<p>четкое разделение системы на достаточно независящие друг от друга уровни иерархии, то есть возможность локализации фрагментов компьютерной системы, не выходя за пределы которых, априори достаточно проводить анализ последствий тех или иных вносимых в систему изменений</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);
		.system_element_6137
		(*
			=> nrel_idtf: [<p>способность анализировать собственное состояние и свою деятельность</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);
		.system_element_6138
		(*
			=> nrel_idtf: [<p>способность приобретать и использовать широкое (а в идеале --- неограниченное) многообразие знаний и навыков</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);
		.system_element_6139
		(*
			=> nrel_idtf: [<p>уровень активности, самостоятельности, целеустремленности в процессе своего обучения, то есть уровень способности к обучению без учителя, уровень автоматизации приобретения новых знаний и навыков, а также совершенствование уже приобретенных знаний и навыков</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);
		.system_element_5415
		(*
			=> nrel_idtf: [<p>трудоемкость интеграции</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);
		.system_element_6140
		(*
			=> nrel_note: [<p>поддержка совместимести как с другими компьютерными системами, так и со своими пользователями в условиях интенсивной эволюции этих компьютерных систем и их пользователей</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*)
	};;

	.system_element_6141
	=> .system_element_6142: {
		.system_element_6143
		(*
			=> nrel_idtf: [<p>преобразование нескольких компьютерных систем в одну целостную компьютерную систему путем объединения информационных и функциональных ресурсов интегрируемых компьютерных систем</p>]
			(*
				<- lang_ru;;
				=> nrel_format: format_html;;
			*);;
		*);
		.system_element_6144
	};
	=> .system_element_6132: {
		.system_element_6145;
		.system_element_6146;
		.system_element_6147;
		.system_element_6148;
		.system_element_6149
	};;

	.system_element_6150
	=> nrel_note: [<p>Важнейшая форма обучения компьютерной системы это приобретение новых знаний и навыков в "готовом" виде, то есть в виде некоторых знаковых конструкций, вводимых в память компьютерной системы, поскольку приобретение знаний и навыков из внешних достоверных источников требует существенно меньшего времени по сравнению с их приобретением собственными силами, на основе собственного опыта и собственных ошибок. Но для того, чтобы указанная форма обучения была эффективной, необходимо максимально возможным образом упростить и формализовать механизм (процедуру) погружения новых знаний в память компьютерной системы. Для решения этой задачи ключевое значение имеет создание удобного для этой цели способа кодирования различного вида информации в памяти компьютерной системы.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_note: [<p>Поскольку основным каналом обучения компьютерных систем является приобретение ими знаний и навыков от других субъектов --- от других компьютерных систем и от пользователей (от разработчиков-учителей и от конечных пользователей), важнейшим фактором обучаемости компьютерной системы является превращение компьютерной системы в коммуникативную систему, способную эффективно общаться с внешними субъектами. Следовательно, уровнь обучаемости компьютерных систем определяется также уровнем ее совместимости с самими этими внешними субъектами, с приобретаемыми ею знаниями и навыками, то есть степенью того, как компьютерная система вместе с теми субъектами, с которыми она обменивается информацией, решает проблему "вавилонского столпотворения".</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;

	.system_element_6128
	=> nrel_note: [<p>Таким образом, этапы эволюции традиционных компьютерных систем, в основе которых лежит их интерпретация на машинах фон Неймана, направлены на повышение качества этих систем и, в частности, на повышение уровня их интеллекта.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_note: [<p>В качестве примера рассмотрим эволюцию языков программирования компьютерных систем:
	<ul>
		<li> Исходная особенность языков программирования заключается в том, что язык представления обрабатываемых программами данных (его синтаксис и денотационная семантика) не задается и фактически для любой программы или для семейства программ разрабатывается свой такой язык. (Языки программирования "хромают" на одну ногу.)
		<li> Данные преобразуются в базы данных, которые становятся общими для программ заданного языка программирования и изменение которых не может быть обусловлено и предусмотрено каждой из этих программ. Такие языки становятся языками программирования, ориентированными на обработку баз данных, а базам данных ставится в соответствие общий язык представления баз данных (с соответствующим синтаксисом и денотационной семантикой)
		<li> Разные языки программирования (с разной денотационной и операционной семантикой) ориентируются на обработку баз данных, которым соответствует один и тот же язык представления баз данных (т.е. языки становятся совместимыми по обрабатываемым данными).
		<li> Языки представления баз данных становятся универсальными и "превращаются" в универсальные языки представления баз знаний (заметим, что продукционные и фреймовые языки представления знаний не являются универсальными)
		<li> Разные языки программирования, ориентированные на обработку баз знаний, становятся подъязыками универсального языка представления баз знаний, т.е. становятся совместимыми не только по обрабатываемым базам знаний, но также и по своему синтаксису.
		<li> Расширяется многообразие языков программирования, реализующих различные модели решателей задач:
		<ul>
			<li> алгоритмические языки программирования низкого и высокого уровня
			<li> последовательные и параллельные процедурные языки программирования (синхронные и асинхронные)
			<li> функциональные языки программирования
			<li> логические языки программирования
			<li> продукционные языки программирования
			<li> объектно-ориентированные языки программирования
			<li> генетические алгоритмы</li>
		<ul>
		<li> Создаются языки семантической спецификации программ, языки формулировки задач и стратегии поиска пути решения задач на основе заданного пакета программ различных языков программирования</li>
	<ul></p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);
	=> nrel_note: [<p>Эволюция языков программирования подробнее рассматривается в работах Ершова А.П., Капитоновой Ю.В., Летичевского А.А., Непейводы Н.Н., Мак-Карти Дж. (язык LISP), Ковальского Р. (язык Рrolog) и других.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;
*];;

*];;